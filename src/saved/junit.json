[
    {
        "id": 1,
        "Question": "JUnit is used for what type of software testing for the Java language?",
        "Options": [
            "a) Unit Testing",
            "b) Integration Testing",
            "c) Functional Testing",
            "d) System Testing",
            ""
        ],
        "Answer": "Answer: a"
    },
    {
        "id": 2,
        "Question": "A JUnit Unit Test Case is compulsorily characterised by a/an known _______ and a/an expected _____",
        "Options": [
            "a) output, input",
            "b) input, output",
            "c) variable, literal",
            "d) program, variable",
            ""
        ],
        "Answer": "Answer: b"
    },
    {
        "id": 3,
        "Question": "To use JUnit in a project we need to add which JAR files on our test classpath?",
        "Options": [
            "a) junit.jar",
            "b) hamcrest-core.jar",
            "c) junit.jar and hamcrest-core.jar",
            "d) java-junit.jar",
            ""
        ],
        "Answer": "Answer: c"
    },
    {
        "id": 4,
        "Question": "What are fixtures in JUnit?",
        "Options": [
            "a) Objects that specify when to run a test",
            "b) Fixed state of a set of objects used as a baseline for running tests",
            "c) Bundle of few test cases run together",
            "d) Date objects",
            ""
        ],
        "Answer": "Answer: b"
    },
    {
        "id": 5,
        "Question": "JUnit test methods must compulsorily return what value?",
        "Options": [
            "a) String",
            "b) int",
            "c) Object",
            "d) void",
            ""
        ],
        "Answer": "Answer: d"
    },
    {
        "id": 6,
        "Question": "JUnit test files are written in files with which file extension?",
        "Options": [
            "a) .junit",
            "b) .test",
            "c) .java",
            "d) .unit",
            ""
        ],
        "Answer": "Answer: c"
    },
    {
        "id": 7,
        "Question": "What is the purpose of assertArrayEquals(“message”, A, B)?",
        "Options": [
            "a) Checks that “message” is in both A and B",
            "b) Checks that “message” is in A but not B",
            "c) Checks that “message” is in B but not A",
            "d) Asserts the equality of the A and B arrays",
            ""
        ],
        "Answer": "Answer: d"
    },
    {
        "id": 8,
        "Question": "Which annotation implies that a method is a JUnit test case?",
        "Options": [
            "a) @junit",
            "b) @testcase",
            "c) @org.Test",
            "d) @org.junit.Test",
            ""
        ],
        "Answer": "Answer: d"
    },
    {
        "id": 9,
        "Question": "What is a test runner?",
        "Options": [
            "a) Used to execute the test file",
            "b) Defines the test file",
            "c) Used to write test cases",
            "d) Used to define annotations",
            ""
        ],
        "Answer": "Answer: a"
    },
    {
        "id": 10,
        "Question": "Which methods cannot be tested by JUnit test class?",
        "Options": [
            "a) public methods",
            "b) private methods",
            "c) protected methods",
            "d) methods with void return type",
            ""
        ],
        "Answer": "Answer: b"
    },
    {
        "id": 11,
        "Question": "What are Parameterised tests used for in JUnit?",
        "Options": [
            "a) Run a test many times with different sets of parameters",
            "b) Run a test with no parameters",
            "c) Run a test with only String parameters",
            "d) Run a test once with fixed set of parameters",
            ""
        ],
        "Answer": "Answer: a"
    },
    {
        "id": 12,
        "Question": "A parameterised test class must carry which annotation?",
        "Options": [
            "a) @Test",
            "b) @ParameterisedClass",
            "c) @Runwith",
            "d) @Class",
            ""
        ],
        "Answer": "Answer: c"
    },
    {
        "id": 13,
        "Question": "The test class must carry the @RunWith annotation with the ______ class as its argument.",
        "Options": [
            "a) Default",
            "b) Parameterised",
            "c) Super",
            "d) Inherited",
            ""
        ],
        "Answer": "Answer: b"
    },
    {
        "id": 14,
        "Question": "What does the fail() method do in JUnit?",
        "Options": [
            "a) Throws an assertion error unconditionally",
            "b) Calls the default constructor",
            "c) Outputs the message “Fail” to the console",
            "d) Pauses the test for 1 second",
            ""
        ],
        "Answer": "Answer: d"
    },
    {
        "id": 15,
        "Question": "Which annotation must be used to define suite classes?",
        "Options": [
            "a) @RunWith",
            "b) @SuiteClasses",
            "c) @Suite",
            "d) @SuiteClass",
            ""
        ],
        "Answer": "Answer: a"
    },
    {
        "id": 16,
        "Question": "When is the tearDown() method called in JUnit?",
        "Options": [
            "a) After all the tests have run",
            "b) At the beginning of every test case",
            "c) After each test case has run",
            "d) At the beginning of the first test case",
            ""
        ],
        "Answer": "Answer: b"
    },
    {
        "id": 17,
        "Question": "What does the assertTrue(“message”,A) do?",
        "Options": [
            "a) Asserts that the condition A is true",
            "b) Asserts that “message” = A",
            "c) Asserts that A contains “message”",
            "d) Asserts that the condition A is false",
            ""
        ],
        "Answer": "Answer: c"
    },
    {
        "id": 18,
        "Question": "How can a method be made to run before the execution of every test case?",
        "Options": [
            "a) Annotate the method with @Before",
            "b) Prefix the method name with startfirst",
            "c) Annotate the method with a @BeforeClass",
            "d) Such a method cannot be made",
            ""
        ],
        "Answer": "Answer: a"
    },
    {
        "id": 19,
        "Question": "Which method from TestCase class returns the name of a Test case?",
        "Options": [
            "a) String testCaseName()",
            "b) String getTest()",
            "c) String getTestCaseName()",
            "d) String getName()",
            ""
        ],
        "Answer": "Answer: a"
    },
    {
        "id": 20,
        "Question": "JUnit runners are available in which package?",
        "Options": [
            "a) org.junit.runners",
            "b) junitfiles.runners",
            "c) org.runners",
            "d) org.junit.files.runners",
            ""
        ],
        "Answer": "Answer: a"
    },
    {
        "id": 21,
        "Question": "To start a test case as JUnit 3.8 test case which runner is required?",
        "Options": [
            "a) org.junit.runners.Junit4",
            "b) org.junit.runners.Parameterized",
            "c) org.junit.internal.runners.Junit38ClassRunner",
            "d) org.junit.internal.runners.Junit4",
            ""
        ],
        "Answer": "Answer: c"
    },
    {
        "id": 22,
        "Question": "To create a custom test runner which class needs to be extended?",
        "Options": [
            "a) CustomRunner",
            "b) TestRunner",
            "c) Runner",
            "d) UserRunner",
            ""
        ],
        "Answer": "Answer: b"
    },
    {
        "id": 23,
        "Question": "What type of object is returned on completion of a test?",
        "Options": [
            "a) org.junit.runner.Result",
            "b) org.junit.runner.Complete",
            "c) org.junit.runner.Outcome",
            "d) org.junit.runner.Object",
            ""
        ],
        "Answer": "Answer: c"
    },
    {
        "id": 24,
        "Question": "To listen to events during a test, which class has to be extended?",
        "Options": [
            "a) org.junit.runner.notification.RunListener",
            "b) org.junit.runner.Listener",
            "c) org.junit.runner.notification.Listener",
            "d) org.junit.runner.RunListener",
            ""
        ],
        "Answer": "Answer: a"
    },
    {
        "id": 25,
        "Question": "When does the wasSuccessful() method of the Runner class return true?",
        "Options": [
            "a) The test file compiled",
            "b) The test file ran",
            "c) Some of the test cases ran successfully",
            "d) All the test cases ran succesfully",
            ""
        ],
        "Answer": "Answer: a"
    },
    {
        "id": 26,
        "Question": "To run the file TestClass.class from the command line, we have to type what?",
        "Options": [
            "a) java TestClass",
            "b) javac TestClass",
            "c) java org.junit.runner.JUnitCore TestClass",
            "d) org.junit.runner.JUnitCore TestClass",
            ""
        ],
        "Answer": "Answer: d"
    },
    {
        "id": 27,
        "Question": "What does the getRunCount() method of the Result return?",
        "Options": [
            "a) String denoting the time of execution",
            "b) Integer denoting the time of execution",
            "c) int denoting the number of tests run",
            "d) int denoting the number of failed tests",
            ""
        ],
        "Answer": "Answer: c"
    },
    {
        "id": 28,
        "Question": "What information does an object of the Failure class contain?",
        "Options": [
            "a) Description of the failed test",
            "b) Description of the failed test and the exception thrown while running it",
            "c) Description of the fail() method",
            "d) Description of the exception thrown",
            ""
        ],
        "Answer": "Answer: c"
    },
    {
        "id": 29,
        "Question": "The ______ is a container used to gather tests for the purpose of grouping and invocation.",
        "Options": [
            "a) Result",
            "b) TestCase",
            "c) Suite",
            "d) Test",
            ""
        ],
        "Answer": "Answer: c"
    },
    {
        "id": 30,
        "Question": "What happens if the tester does not define a Suite?",
        "Options": [
            "a) The test runner automatically creates a Suite",
            "b) Compilation Error",
            "c) Every test fails",
            "d) Every test passes",
            ""
        ],
        "Answer": "Answer: a"
    },
    {
        "id": 31,
        "Question": "The Suite object is a _____ that executes all of the @Test annotated methods in the test class.",
        "Options": [
            "a) Result",
            "b) FolderConfigurationTest",
            "c) FileConfigurationTest",
            "d) Runner",
            ""
        ],
        "Answer": "Answer: d"
    },
    {
        "id": 32,
        "Question": "Suite class is the JUnit 4 equivalent of what feature of JUnit 3.8.x?",
        "Options": [
            "a) static Test suite() method",
            "b) Test suite() method",
            "c) static void suite() method",
            "d) void suite() method",
            ""
        ],
        "Answer": "Answer: a"
    },
    {
        "id": 33,
        "Question": "For a Suite class, the @RunWith annotation has the value of which class?",
        "Options": [
            "a) org.junit.runners.class",
            "b) org.junit.Suite.class",
            "c) org.runners.Suite.class",
            "d) org.junit.runners.Suite.class",
            ""
        ],
        "Answer": "Answer: d"
    },
    {
        "id": 34,
        "Question": "Which annotation is used to list all the classes in a suite?",
        "Options": [
            "a) @RunWith",
            "b) @SuiteClasses",
            "c) @Classses",
            "d) @SuiteClass",
            ""
        ],
        "Answer": "Answer: b"
    },
    {
        "id": 35,
        "Question": "If we want to run test files Test1 and Test2 together, the @SuiteClasses annotation will be?",
        "Options": [
            "a) @SuiteClasses(value={Test1.class,Test2.class})",
            "b) @SuiteClasses(value=All)",
            "c) @SuiteClasses(Test1, Test2);",
            "d) @SuiteClasses()",
            ""
        ],
        "Answer": "Answer: a"
    },
    {
        "id": 36,
        "Question": "JUnit Suites are independent of the capability of the ______ system.",
        "Options": [
            "a) Run",
            "b) Class",
            "c) Test",
            "d) Build",
            ""
        ],
        "Answer": "Answer: d"
    },
    {
        "id": 37,
        "Question": "Which attribute is added to the @Test annotation so that the test passes when an expected exception is thrown?",
        "Options": [
            "a) exception",
            "b) throws",
            "c) expected",
            "d) expectedException",
            ""
        ],
        "Answer": "Answer: b"
    },
    {
        "id": 38,
        "Question": "The ______ is a component that “interacts with a client, controlling and managing the handling of each request”.",
        "Options": [
            "a) Master",
            "b) RequestHandler",
            "c) Controller",
            "d) Class",
            ""
        ],
        "Answer": "Answer: c"
    },
    {
        "id": 39,
        "Question": "An example of a web controller is __________",
        "Options": [
            "a) Apache Struts Framework",
            "b) JUnit",
            "c) Java",
            "d) Php",
            ""
        ],
        "Answer": "Answer: a"
    },
    {
        "id": 40,
        "Question": "What are the object(s) which make the core of the description of a controller component?",
        "Options": [
            "a) The Request, the Response",
            "b) The Request, the Response, the RequestHandler, and the Controller",
            "c) The Request",
            "d) The RequestHandler",
            ""
        ],
        "Answer": "Answer: b"
    },
    {
        "id": 41,
        "Question": "What is the signature of the addHandler method of the Controller interface?",
        "Options": [
            "a) void addHandler(Request request, RequestHandler requestHandler)",
            "b) void addHandler(RequestHandler requestHandler);",
            "c) void addHandler(RequestHandler requestHandler);",
            "d) void addHandler(Request request, Request requestHandler);",
            ""
        ],
        "Answer": "Answer: a"
    },
    {
        "id": 42,
        "Question": "The principle of “Hollywood Principle: Don’t call us, we’ll call you” is commonly known as _____________",
        "Options": [
            "a) Calling Principle",
            "b) Control Call",
            "c) Inversion of Control",
            "d) No-Show Principle",
            ""
        ],
        "Answer": "Answer: c"
    },
    {
        "id": 43,
        "Question": "Inversion of Control is used to increase __________ of the code.",
        "Options": [
            "a) Functionality",
            "b) Cleanliness",
            "c) Effectiveness",
            "d) Modularity",
            ""
        ],
        "Answer": "Answer: d"
    },
    {
        "id": 44,
        "Question": "When the container calls setter methods after invoking a constructor with no arguments it is known as ________________",
        "Options": [
            "a) Constructor-based dependency injection",
            "b) Setter-based dependency injection",
            "c) Setter-Seller dependency injection",
            "d) No-Constructor dependency injection",
            ""
        ],
        "Answer": "Answer: b"
    },
    {
        "id": 45,
        "Question": "Constructor-based DI is accomplished when the container invokes a class constructor with ____________",
        "Options": [
            "a) A number of arguments",
            "b) No argument",
            "c) Just one argument",
            "d) Null objects",
            ""
        ],
        "Answer": "Answer: a"
    },
    {
        "id": 46,
        "Question": "Constructor-based DI is preferred for ___________",
        "Options": [
            "a) Optional dependencies",
            "b) Mandatory dependencies",
            "c) All dependencies",
            "d) No dependency",
            ""
        ],
        "Answer": "Answer: b"
    },
    {
        "id": 47,
        "Question": "In the context of unit testing, the term ___________ is used to contrast and compare the objects you use in your application with the objects that you use to test your application (test objects).",
        "Options": [
            "a) Mock Object",
            "b) Dummy Object",
            "c) Domain Object",
            "d) Real Object",
            ""
        ],
        "Answer": "Answer: c"
    },
    {
        "id": 48,
        "Question": "Improving the design of existing code is known as __________",
        "Options": [
            "a) Refactoring",
            "b) Improving",
            "c) Betterment",
            "d) Upgrading",
            ""
        ],
        "Answer": "Answer: a"
    },
    {
        "id": 49,
        "Question": "In what order is multiple @Before annotated methods run?",
        "Options": [
            "a) Oldest First",
            "b) Newest First",
            "c) Randomly",
            "d) According to argument list",
            ""
        ],
        "Answer": "Answer: c"
    },
    {
        "id": 50,
        "Question": "The ___________ method confirms that both references are to the same object.",
        "Options": [
            "a) assertEquals",
            "b) assertEqual",
            "c) assertEqualObject",
            "d) assertSame",
            ""
        ],
        "Answer": "Answer: d"
    },
    {
        "id": 51,
        "Question": "The assertEquals() method uses which underlying method to compare objects?",
        "Options": [
            "a) ==",
            "b) equals()",
            "c) isequal()",
            "d) =",
            ""
        ],
        "Answer": "Answer: b"
    },
    {
        "id": 52,
        "Question": "The equals() method is inherited from which base class?",
        "Options": [
            "a) Object",
            "b) String",
            "c) Integer",
            "d) org.junit.Equals",
            ""
        ],
        "Answer": "Answer: a"
    },
    {
        "id": 53,
        "Question": "To use Parameterized.class with the @RunWith annotation, we need to import __________",
        "Options": [
            "a) org.junit.runners.Parameterized",
            "b) org.junit.Parameterized",
            "c) org.junit.runners.Parameterized",
            "d) org.runners.Parameterized",
            ""
        ],
        "Answer": "Answer: a"
    },
    {
        "id": 54,
        "Question": "To avoid overdesigning an interface, usually ____________ is used.",
        "Options": [
            "a) Agile Development",
            "b) Test Driven Development",
            "c) Base Design Development",
            "d) Waterfall Development",
            ""
        ],
        "Answer": "Answer: b"
    },
    {
        "id": 55,
        "Question": "The _________ is a sequential or non-iterative design process, which is used in software development processes, in which progress is seen as flowing steadily downwards.",
        "Options": [
            "a) Waterfall Model",
            "b) Iterative Model",
            "c) Spiral Model",
            "d) Big Bang Model",
            ""
        ],
        "Answer": "Answer: a"
    },
    {
        "id": 56,
        "Question": "Controller logic component accesses the ________ logic component.",
        "Options": [
            "a) Class",
            "b) Object",
            "c) Business",
            "d) Criteria",
            ""
        ],
        "Answer": "Answer: c"
    },
    {
        "id": 57,
        "Question": "Overuse of argument _________ can lead to fragile tests.",
        "Options": [
            "a) Parameters",
            "b) Objects",
            "c) Classes",
            "d) Captors",
            ""
        ],
        "Answer": "Answer: d"
    },
    {
        "id": 58,
        "Question": "What are exceptions?",
        "Options": [
            "a) Anomalous conditions requiring special processing",
            "b) Extra methods written to increase functionality",
            "c) Commented lines describing exceptional cases",
            "d) Null objects",
            ""
        ],
        "Answer": "Answer: a"
    },
    {
        "id": 59,
        "Question": "________ can be useful in adding additional functionality which applies to every test within a test class.",
        "Options": [
            "a) Copy",
            "b) Rules",
            "c) Exceptions",
            "d) Boundaries",
            ""
        ],
        "Answer": "Answer: b"
    },
    {
        "id": 60,
        "Question": "_________ is a programming paradigm which allows the separation of cross cutting concerns, hence, increasing modularity.",
        "Options": [
            "a) Functional Programming",
            "b) Object Oriented Programming",
            "c) Aspect Oriented Programming",
            "d) Data Injections",
            ""
        ],
        "Answer": "Answer: c"
    },
    {
        "id": 61,
        "Question": "________ describes a class of functions which when run modify other functions.",
        "Options": [
            "a) Class",
            "b) Advice",
            "c) Modifiers",
            "d) Changers",
            ""
        ],
        "Answer": "Answer: b"
    },
    {
        "id": 62,
        "Question": "AOP forms a basis for __________",
        "Options": [
            "a) Functional Development",
            "b) Object Oriented Programming",
            "c) Datafield Development",
            "d) Aspect Oriented Software Development",
            ""
        ],
        "Answer": "Answer: d"
    },
    {
        "id": 63,
        "Question": "Custom JUnit rules can be created using ___________",
        "Options": [
            "a) TestRule Interface",
            "b) CreateRule Interface",
            "c) RuleCreate Interface",
            "d) RuleInitialize Interface",
            ""
        ],
        "Answer": "Answer: a"
    },
    {
        "id": 64,
        "Question": "With the ‘expected’ argument, one cannot ___________",
        "Options": [
            "a) Test a method",
            "b) Test for exception type",
            "c) Test the value of the message in the exception",
            "d) Test for specific exception",
            ""
        ],
        "Answer": "Answer: c"
    },
    {
        "id": 65,
        "Question": "The _________ rule can be used to test both exception type and message.",
        "Options": [
            "a) Expected",
            "b) ExpectedException",
            "c) CatchException",
            "d) Catch",
            ""
        ],
        "Answer": "Answer: b"
    },
    {
        "id": 66,
        "Question": "ExpectedException is found under which package?",
        "Options": [
            "a) org.junit.ExpectedException",
            "b) org.junit.Test.ExpectedException",
            "c) org.junit.Rule.ExpectedException",
            "d) org.junit.rules.ExpectedException",
            ""
        ],
        "Answer": "Answer: d"
    },
    {
        "id": 67,
        "Question": "The correct way to initialise an ExpectedException object is __________",
        "Options": [
            "a) public ExpectedException thrown = ExpectedException.none()",
            "b) @Rule public ExpectedException thrown",
            "c) @Rule public ExpectedException thrown = ExpectedException.none()",
            "d) public ExpectedException thrown = ExpectedException.none()",
            ""
        ],
        "Answer": "Answer: c"
    },
    {
        "id": 68,
        "Question": "What is timeout testing?",
        "Options": [
            "a) Testing for exceptions",
            "b) Testing code execution within time limits",
            "c) Testing code correctness",
            "d) Testing code with time functions",
            ""
        ],
        "Answer": "Answer: b"
    },
    {
        "id": 69,
        "Question": "The ___________ parameter is used along with the @Test annotation to test for timeouts.",
        "Options": [
            "a) Expected",
            "b) Timeout",
            "c) NoLimit",
            "d) Time",
            ""
        ],
        "Answer": "Answer: b"
    },
    {
        "id": 70,
        "Question": "@Test(timeout = 130) implies a time limit of ___________",
        "Options": [
            "a) 130 milliseconds",
            "b) 130 minutes",
            "c) 130 seconds",
            "d) 1.30 minutes",
            ""
        ],
        "Answer": "Answer: a"
    },
    {
        "id": 71,
        "Question": "Timeout testing is ____________",
        "Options": [
            "a) Software Dependent",
            "b) Hardware Dependent",
            "c) Software and Hardware Dependent",
            "d) Software and Hardware Independent",
            ""
        ],
        "Answer": "Answer: c"
    },
    {
        "id": 72,
        "Question": "What applies the same timeout to every test method of a class?",
        "Options": [
            "a) @Timeout",
            "b) @Expected",
            "c) Timeout Rule",
            "d) Not possible to apply same timeout",
            ""
        ],
        "Answer": "Answer: c"
    },
    {
        "id": 73,
        "Question": "A Timeout Rule is initialized by ____________",
        "Options": [
            "a) @Rule public Timeout object = new Timeout()",
            "b) @Rule  public Timeout object = Timeout.seconds()",
            "c)  public Timeout object = Timeout.seconds()",
            "d) public Timeout object = new Timeout()",
            ""
        ],
        "Answer": "Answer: b"
    },
    {
        "id": 74,
        "Question": "Where is the Timeout class present?",
        "Options": [
            "a) org.junit.rules.Timeout",
            "b) org.junit.Timeout",
            "c) org.Timeout",
            "d) org.junit.RuleClasses.Timeout",
            ""
        ],
        "Answer": "Answer: a"
    },
    {
        "id": 75,
        "Question": "The Timeout Rule implements which interface?",
        "Options": [
            "a) Timeout",
            "b) Test",
            "c) TestingTimeout",
            "d) TestRule",
            ""
        ],
        "Answer": "Answer: d"
    },
    {
        "id": 76,
        "Question": "If a timeout which has been specified lapses before the completion of the test, its execution is interrupted with _____________",
        "Options": [
            "a) Interrupt()",
            "b) Thread.interrupt()",
            "c) Thread.interruptable()",
            "d) Threads.interruptable()",
            ""
        ],
        "Answer": "Answer: b"
    },
    {
        "id": 77,
        "Question": "What does a specified timeout of 0 imply?",
        "Options": [
            "a) 130 milliseconds",
            "b) 130 minutes",
            "c) 130 seconds",
            "d) Not set",
            ""
        ],
        "Answer": "Answer: d"
    },
    {
        "id": 78,
        "Question": "________________ is a library that contains a lot of helpful matcher objects , ported in several languages.",
        "Options": [
            "a) Java",
            "b) Pygame",
            "c) AllenWake",
            "d) Hamcrest",
            ""
        ],
        "Answer": "Answer: d"
    },
    {
        "id": 79,
        "Question": "Hamcrest is not a ______________ framework in itself.",
        "Options": [
            "a) Matching",
            "b) Testing",
            "c) Asserting",
            "d) Checking",
            ""
        ],
        "Answer": "Answer: b"
    },
    {
        "id": 80,
        "Question": "The package for the assertThat() function is?",
        "Options": [
            "a) org.hamcrest.CoreMatchers.assertThat",
            "b) org.junit.Assert.assertThat",
            "c) org.junit.JunitMatchers.assertThat",
            "d) org.junit.hasItem.assertThat",
            ""
        ],
        "Answer": "Answer: b"
    },
    {
        "id": 81,
        "Question": "______________ Hamcrest matcher can be used to match absolutely everything.",
        "Options": [
            "a) Is",
            "b) AnyOf",
            "c) Anything",
            "d) Not",
            ""
        ],
        "Answer": "Answer: c"
    },
    {
        "id": 82,
        "Question": "______ is used only to improve the readability of the statements.",
        "Options": [
            "a) anything",
            "b) is",
            "c) sameInstance",
            "d) nullValue",
            ""
        ],
        "Answer": "Answer: b"
    },
    {
        "id": 83,
        "Question": "Which Hamcrest matcher is just like the && operator?",
        "Options": [
            "a) Is",
            "b) Anything",
            "c) sameInstance",
            "d) allOf",
            ""
        ],
        "Answer": "Answer: d"
    },
    {
        "id": 84,
        "Question": "________ checks to see if any of the contained matchers match.",
        "Options": [
            "a) anyOf",
            "b) allOf",
            "c) instanceOf",
            "d) notNull",
            ""
        ],
        "Answer": "Answer: a"
    },
    {
        "id": 85,
        "Question": "___________ traverses the meaning of the contained matchers.",
        "Options": [
            "a) not",
            "b) or",
            "c) allOf",
            "d) andAll",
            ""
        ],
        "Answer": "Answer: a"
    },
    {
        "id": 86,
        "Question": "The instanceOf matcher is equivalent to ________",
        "Options": [
            "a) isCompatibleType",
            "b) isCompatible",
            "c) isInstance",
            "d) isSame",
            ""
        ],
        "Answer": "Answer: a"
    },
    {
        "id": 87,
        "Question": "___________ is used to test object identity.",
        "Options": [
            "a) instanceOf",
            "b) isCompatibleType",
            "c) type",
            "d) sameInstance",
            ""
        ],
        "Answer": "Answer: d"
    },
    {
        "id": 88,
        "Question": "The JUnit hasItem() function is a _____________",
        "Options": [
            "a) Hamcrest Matcher",
            "b) Instance Function",
            "c) JUnitMatcher",
            "d) Matcher",
            ""
        ],
        "Answer": "Answer: c"
    },
    {
        "id": 89,
        "Question": "The package to which hasItem() function belongs is _______________",
        "Options": [
            "a) org.junit.JUnitMatchers.hasItem",
            "b) org.junit.hasItem",
            "c) org.junit.Junit.hasItem",
            "d) org.junit.hamcrest.hasItem",
            ""
        ],
        "Answer": "Answer: a"
    },
    {
        "id": 90,
        "Question": "Class JUnitMatchers extends _______________",
        "Options": [
            "a) java.lang.Object",
            "b) java.lang.String",
            "c) java.util.*",
            "d) java.util.Arrays",
            ""
        ],
        "Answer": "Answer: a"
    },
    {
        "id": 91,
        "Question": "_________ is used for combining those matchers which must both pass.",
        "Options": [
            "a) all",
            "b) both",
            "c) justTwo",
            "d) matchTwo",
            ""
        ],
        "Answer": "Answer: b"
    },
    {
        "id": 92,
        "Question": "__________ Hamcrest matcher tests for null values.",
        "Options": [
            "a) isNull",
            "b) nullValue",
            "c) isNullValue",
            "d) isNullable",
            ""
        ],
        "Answer": "Answer: b"
    },
    {
        "id": 93,
        "Question": "___________ tests whether a JavaBean has a particular property.",
        "Options": [
            "a) isProperty",
            "b) porperty",
            "c) hasProperty",
            "d) isPresent",
            ""
        ],
        "Answer": "Answer: c"
    },
    {
        "id": 94,
        "Question": "To define a ________ in a JavaBean class, public getter and setter methods have to be supplied.",
        "Options": [
            "a) Class",
            "b) Object",
            "c) Value",
            "d) Property",
            ""
        ],
        "Answer": "Answer: d"
    },
    {
        "id": 95,
        "Question": "A/An __________ property is an array instead of a single value.",
        "Options": [
            "a) Indexed",
            "b) valued",
            "c) null",
            "d) variable",
            ""
        ],
        "Answer": "Answer: a"
    },
    {
        "id": 96,
        "Question": "__________________ tests whether a given string equals another one, ignoring the case.",
        "Options": [
            "a) stringEqual",
            "b) equalToIgnoringCase",
            "c) ignoringCaseEqual",
            "d) equalToCase",
            ""
        ],
        "Answer": "Answer: b"
    },
    {
        "id": 97,
        "Question": "_________ tests whether a given Map has a given entry.",
        "Options": [
            "a) hasItem",
            "b) hasItems",
            "c) hasValue",
            "d) hasEntry",
            ""
        ],
        "Answer": "Answer: d"
    },
    {
        "id": 98,
        "Question": "Which Hamcrest core matcher checks if a number is equal to a number of some acceptable error?",
        "Options": [
            "a) closeTo",
            "b) equals",
            "c) errorBy",
            "d) similarTo",
            ""
        ],
        "Answer": "Answer: a"
    },
    {
        "id": 99,
        "Question": "assertThat(1.03, is(closeTo(1.0, 0.03))) is ____________",
        "Options": [
            "a) True",
            "b) False",
            "c) Null",
            "d) Error",
            ""
        ],
        "Answer": "Answer: a"
    },
    {
        "id": 100,
        "Question": "assertThat(0.03, is(closeTo(1.0, 0.03))) is ___________",
        "Options": [
            "a) True",
            "b) False",
            "c) Null",
            "d) Error",
            ""
        ],
        "Answer": "Answer: b"
    },
    {
        "id": 101,
        "Question": "The closeTo function is found under which package?",
        "Options": [
            "a) org.hamcrest.TypeSafeMatcher",
            "b) org.hamcrest.BaseMatcher",
            "c) org.hamcrest.number.IsCloseTo",
            "d) org.hamcrest.number.CloseTo",
            ""
        ],
        "Answer": "Answer: c"
    },
    {
        "id": 102,
        "Question": "The isCloseTo class extends which base class?",
        "Options": [
            "a) Matcher",
            "b) HamcrestCore",
            "c) TypeMatcher",
            "d) TypeSafeMatcher",
            ""
        ],
        "Answer": "Answer: d"
    },
    {
        "id": 103,
        "Question": "The ___________ method of the TypeSafeMatcher class is made final.",
        "Options": [
            "a) matches",
            "b) matchesSafely",
            "c) describeMismatchSafely",
            "d) No mehtod",
            ""
        ],
        "Answer": "Answer: a"
    },
    {
        "id": 104,
        "Question": "The TypeSafeMatcher implements the __________ interface.",
        "Options": [
            "a) Self",
            "b) Describing",
            "c) EqulityCheck",
            "d) SelfDescribing",
            ""
        ],
        "Answer": "Answer: d"
    },
    {
        "id": 105,
        "Question": "The ____________ matcher checks if a given key is in a map.",
        "Options": [
            "a) hasEntry",
            "b) hasValue",
            "c) hasKey",
            "d) isKey",
            ""
        ],
        "Answer": "Answer: c"
    },
    {
        "id": 106,
        "Question": "To write custom matcher _____________ has to be implemented.",
        "Options": [
            "a) Matcher Interface",
            "b) Hamcrest Interface",
            "c) HamcrestMatching Interface",
            "d) Not possible to implement",
            ""
        ],
        "Answer": "Answer: b"
    },
    {
        "id": 107,
        "Question": "___________ is the base class for all Matcher implementations.",
        "Options": [
            "a) MatcherBase",
            "b) Base",
            "c) Matcher",
            "d) BaseMatcher",
            ""
        ],
        "Answer": "Answer: d"
    },
    {
        "id": 108,
        "Question": "______________ are the first type of tests any application should have.",
        "Options": [
            "a) Functional Tests",
            "b) Unit Tests",
            "c) Integration Tests",
            "d) Stress Tests",
            ""
        ],
        "Answer": "Answer: b"
    },
    {
        "id": 109,
        "Question": "Unit tests allow greater test _____________ than functional tests.",
        "Options": [
            "a) Coverage",
            "b) Redundancy",
            "c) Prowess",
            "d) Accuracy",
            ""
        ],
        "Answer": "Answer: a"
    },
    {
        "id": 110,
        "Question": "Functional tests are more _____________ compared to unit tests.",
        "Options": [
            "a) Fine grained",
            "b) Accurate",
            "c) Time consuming",
            "d) Coarse grained",
            ""
        ],
        "Answer": "Answer: d"
    },
    {
        "id": 111,
        "Question": "Unit Tests can detect ________________",
        "Options": [
            "a) Regressions",
            "b) Quality Check",
            "c) Database Errors",
            "d) Enforced Error",
            ""
        ],
        "Answer": "Answer: a"
    },
    {
        "id": 112,
        "Question": "Agile methodologists favour writing code in _____________ slices to produce a working use case.",
        "Options": [
            "a) Horizontal",
            "b) Small",
            "c) Diagonal",
            "d) Vertical",
            ""
        ],
        "Answer": "Answer: d"
    },
    {
        "id": 113,
        "Question": "To retain a design across features, agile methodologies encourage ______________ to adapt the code base as needed.",
        "Options": [
            "a)  Changing",
            "b) Adapting",
            "c) Refactoring",
            "d) Duplicating",
            ""
        ],
        "Answer": "Answer: c"
    },
    {
        "id": 114,
        "Question": "The agile methodologies try to lower project risks by providing the ability to cope with ________",
        "Options": [
            "a) Change",
            "b) Refactoring",
            "c) Inefficiency",
            "d) Redundancy",
            ""
        ],
        "Answer": "Answer: a"
    },
    {
        "id": 115,
        "Question": "___________ is a principle of extreme programming (XP) that states that a functionality should not be added until deemed necessary.",
        "Options": [
            "a) KISS",
            "b) MoSCoW Method",
            "c) Overengineering",
            "d) YAGNI",
            ""
        ],
        "Answer": "Answer: d"
    },
    {
        "id": 116,
        "Question": "YAGNI stands for _____________",
        "Options": [
            "a) Your agile going now inside",
            "b) You aren’t gonna need it",
            "c) You are gonna need it",
            "d) You are given no information",
            ""
        ],
        "Answer": "Answer: b"
    },
    {
        "id": 117,
        "Question": "YAGNI is a principle behind the XP practice of _______________",
        "Options": [
            "a) KISS",
            "b) MoSCoW",
            "c) WIB",
            "d) DTSTTCPW",
            ""
        ],
        "Answer": "Answer: d"
    },
    {
        "id": 118,
        "Question": "All ____________ has to be completed before integration testing can be done.",
        "Options": [
            "a) Stress testing",
            "b) Functional testing",
            "c) Unit testing",
            "d) Load testing",
            ""
        ],
        "Answer": "Answer: c"
    },
    {
        "id": 119,
        "Question": "KISS is an acronym for ________________",
        "Options": [
            "a) Keep it simple, stupid",
            "b) Keep it safe and sound",
            "c) Know it soundly and systematically",
            "d) Know information safely and securely",
            ""
        ],
        "Answer": "Answer: a"
    },
    {
        "id": 120,
        "Question": "In software engineering, _______________ is a principle of software development, which aims at reducing repetition of information of every kind, especially useful in multi-tier architectures.",
        "Options": [
            "a) KISS",
            "b) WET",
            "c) SSOT",
            "d) DRY",
            ""
        ],
        "Answer": "Answer: d"
    },
    {
        "id": 121,
        "Question": "DRY stands for ____________",
        "Options": [
            "a) Do right yourself",
            "b) Don’t repeat yourself",
            "c) Don’t ring the yarn",
            "d) Do rule over yourself",
            ""
        ],
        "Answer": "Answer: b"
    },
    {
        "id": 122,
        "Question": "Violations of DRY are referred to as _________ solutions.",
        "Options": [
            "a) WET",
            "b) NOT DRY",
            "c) KISS",
            "d) ENGAGE",
            ""
        ],
        "Answer": "Answer: a"
    },
    {
        "id": 123,
        "Question": "_______________ tests are designed early.",
        "Options": [
            "a) Preventive",
            "b) Reactive",
            "c) Associative",
            "d) Amorous",
            ""
        ],
        "Answer": "Answer: a"
    },
    {
        "id": 124,
        "Question": "___________ tests are designed after the software has been produced.",
        "Options": [
            "a) Preventive",
            "b) Reactive",
            "c) Associative",
            "d) Amorous",
            ""
        ],
        "Answer": "Answer: b"
    },
    {
        "id": 125,
        "Question": "What does an exit criteria do?",
        "Options": [
            "a) Define when to remove control",
            "b) Defines the level of a test",
            "c) Defines which test to not test",
            "d) Defines when a test level is completed",
            ""
        ],
        "Answer": "Answer: d"
    },
    {
        "id": 126,
        "Question": "The likelihood of a/an __________ event determines the level of risk.",
        "Options": [
            "a) unlikely",
            "b) adverse",
            "c) ordinary",
            "d) expected",
            ""
        ],
        "Answer": "Answer: b"
    },
    {
        "id": 127,
        "Question": "_______________ testing is used for testing systems for which the specification takes in the form of rules or cause-effect combinations.",
        "Options": [
            "a) Unit Testing",
            "b) Functional Testing",
            "c) Load Testing",
            "d) Decision Table Testing",
            ""
        ],
        "Answer": "Answer: d"
    },
    {
        "id": 128,
        "Question": "A ______________ is the second phase of software testing in which a sampling of the intended audience tests the product.",
        "Options": [
            "a) Alpha",
            "b) Beta",
            "c) Gamma",
            "d) Delta",
            ""
        ],
        "Answer": "Answer: b"
    },
    {
        "id": 129,
        "Question": "Beta Testing is also known as _________ testing.",
        "Options": [
            "a) Field",
            "b) Unit",
            "c) Functional",
            "d) Box",
            ""
        ],
        "Answer": "Answer: a"
    },
    {
        "id": 130,
        "Question": "______________ beta versions are released to a select group of individuals for undergoing user test.",
        "Options": [
            "a) Open",
            "b) Surround",
            "c) Closed",
            "d) Mandated",
            ""
        ],
        "Answer": "Answer: c"
    },
    {
        "id": 131,
        "Question": "______________ is a parallel development of functions and subsequent integration.",
        "Options": [
            "a) AOP",
            "b) OOP",
            "c) Agile Development",
            "d) RAD",
            ""
        ],
        "Answer": "Answer: d"
    },
    {
        "id": 132,
        "Question": "____________ can be thought of as a vehicle to perform a test process.",
        "Options": [
            "a) Testing technique",
            "b) Testing tools",
            "c) MoSCow",
            "d) DRY",
            ""
        ],
        "Answer": "Answer: b"
    },
    {
        "id": 133,
        "Question": "In software testing, a _____________ is a collection of software and test data configured to test a program unit by putting it under varying conditions and monitoring its behavior and output.",
        "Options": [
            "a) Test harness",
            "b) Test automation",
            "c) Test mechanics",
            "d) Test manuscripts",
            ""
        ],
        "Answer": "Answer: a"
    },
    {
        "id": 134,
        "Question": "Test harness has two main parts, the test script repository and _______________",
        "Options": [
            "a) Test specification",
            "b) Test management controller",
            "c) Test controller",
            "d) Test execution engine",
            ""
        ],
        "Answer": "Answer: d"
    },
    {
        "id": 135,
        "Question": "The test execution engine does not carry any information about the ___________ product.",
        "Options": [
            "a) untested",
            "b) tested",
            "c) marketed",
            "d) semi-tested",
            ""
        ],
        "Answer": "Answer: a"
    },
    {
        "id": 136,
        "Question": "A __________ is an (often times virtual) environment used to verify the correctness soundness of a design or model, like that of a software product.",
        "Options": [
            "a) Test model",
            "b) Test criteria",
            "c) Test Flow",
            "d) Test bench",
            ""
        ],
        "Answer": "Answer: d"
    },
    {
        "id": 137,
        "Question": "___________ is a type of software testing which verifies that software, which was previously developed and tested, still performs correctly after it was changed or interfaced with other software.",
        "Options": [
            "a) Unit Testing",
            "b) Regression Testing",
            "c) Stress Testing",
            "d) Functional Testing",
            ""
        ],
        "Answer": "Answer: b"
    },
    {
        "id": 138,
        "Question": "The output of the requirement analysis and the requirement specification is used as the input for writing ____________",
        "Options": [
            "a) User Acceptance Test Cases",
            "b) User Rejection Test Cases",
            "c) Product Rejection Test Cases",
            "d) Product Acceptance Test Cases",
            ""
        ],
        "Answer": "Answer: a"
    },
    {
        "id": 139,
        "Question": "Testing the end to end functionality of the system as a whole is defined as _______________",
        "Options": [
            "a) Unit Testing",
            "b) Functional Testing",
            "c) Stress Testing",
            "d) Load Testing",
            ""
        ],
        "Answer": "Answer: b"
    },
    {
        "id": 140,
        "Question": "Independent testers are _____________ and identify different defects at the same time.",
        "Options": [
            "a) Isolated",
            "b) Biased",
            "c) Unbiased",
            "d) Modular",
            ""
        ],
        "Answer": "Answer: c"
    },
    {
        "id": 141,
        "Question": "In a reactive approach, the bulk of the test design work begins __________",
        "Options": [
            "a) Before any software is made",
            "b) After some modules are completed",
            "c) After every module, testing is done",
            "d) After the software has been produced",
            ""
        ],
        "Answer": "Answer: d"
    },
    {
        "id": 142,
        "Question": "DSDM stands for _____________",
        "Options": [
            "a) Dynamic systems development method",
            "b) Dynamic solutions development method",
            "c) Database systems development method",
            "d) Database solutions development method",
            ""
        ],
        "Answer": "Answer: a"
    },
    {
        "id": 143,
        "Question": "DSDM fixes cost, quality and time at the outset and uses the ___________ prioritisation of scope.",
        "Options": [
            "a) KISS",
            "b) MoSCow",
            "c) PRINCE2",
            "d) PSP",
            ""
        ],
        "Answer": "Answer: b"
    },
    {
        "id": 144,
        "Question": "DSDM originally sought to provide some discipline to the ______________ method.",
        "Options": [
            "a) MSF",
            "b) Scrum",
            "c) RAD",
            "d) BDD",
            ""
        ],
        "Answer": "Answer: c"
    },
    {
        "id": 145,
        "Question": "DSDM is a/an _____________ approach.",
        "Options": [
            "a) Waterfall",
            "b) Spiral",
            "c) Incremental",
            "d) Iterative and Incremental",
            ""
        ],
        "Answer": "Answer: d"
    },
    {
        "id": 146,
        "Question": "The one who is responsible to initialise the project by ensuring that essential requirements are found early on in an DSDM environment is ____________",
        "Options": [
            "a) Executive Sponsor",
            "b) Visionary",
            "c) Ambassador User",
            "d) Advisor User",
            ""
        ],
        "Answer": "Answer: b"
    },
    {
        "id": 147,
        "Question": "___________ is responsible for gathering and recording the requirements, agreements, and decisions made in every workshop.",
        "Options": [
            "a) Executive Sponsor",
            "b) Visionary",
            "c) Scribe",
            "d) Project Manager",
            ""
        ],
        "Answer": "Answer: c"
    },
    {
        "id": 148,
        "Question": "LSD stands for ________________",
        "Options": [
            "a) Lean Software Development",
            "b) Live Software Development",
            "c) Less Software Data",
            "d) Least Software Dataloss",
            ""
        ],
        "Answer": "Answer: a"
    },
    {
        "id": 149,
        "Question": "Lean philosophy regards everything not adding value to the customer as __________",
        "Options": [
            "a) Unnecessary",
            "b) Waste",
            "c) Useful",
            "d) Necessary",
            ""
        ],
        "Answer": "Answer: b"
    },
    {
        "id": 150,
        "Question": "A value ____________ technique is used to identify waste.",
        "Options": [
            "a) Mapping",
            "b) Stream",
            "c) Stream Mapping",
            "d) Flow",
            ""
        ],
        "Answer": "Answer: c"
    },
    {
        "id": 151,
        "Question": "The ________________ is a management paradigm that specifies any manageable system as being limited in achieving more of its goals by a very small number of constraints.",
        "Options": [
            "a) RCM",
            "b) TPM",
            "c) QRM",
            "d) TOC",
            ""
        ],
        "Answer": "Answer: d"
    },
    {
        "id": 152,
        "Question": "__________ in the code are signs of bad code designs and should be avoided.",
        "Options": [
            "a) Repetitions",
            "b) Modularity",
            "c) Functions",
            "d) Documentation",
            ""
        ],
        "Answer": "Answer: a"
    },
    {
        "id": 153,
        "Question": "Lean Development follows the principle of ______________",
        "Options": [
            "a) Decide as late as possible",
            "b) Deliver as late as possible",
            "c) Decide as early as possible",
            "d) Not building integrity",
            ""
        ],
        "Answer": "Answer: a"
    },
    {
        "id": 154,
        "Question": "________________ is a client-centric, architecture-centric, and pragmatic software process.",
        "Options": [
            "a) Loss Testing",
            "b) Feature Driven Development",
            "c) DSDM",
            "d) Scrum",
            ""
        ],
        "Answer": "Answer: b"
    },
    {
        "id": 155,
        "Question": "_____________ consists of exploring and explaining the domain of the problem to be solved.",
        "Options": [
            "a) Feature Teams",
            "b) Inspections",
            "c) Domain Object Modelling",
            "d) Configuration Management",
            ""
        ],
        "Answer": "Answer: c"
    },
    {
        "id": 156,
        "Question": "_______________ ensure there is always an up-to-date system that can be demonstrated to the client.",
        "Options": [
            "a) Domain Object Modelling",
            "b) Individual Class (Code) Ownership",
            "c) Visibility of progress and results",
            "d) Regular Builds",
            ""
        ],
        "Answer": "Answer: d"
    },
    {
        "id": 157,
        "Question": "_____________ helps visualizing both the processes and the data of a method.",
        "Options": [
            "a) Configuration Management.",
            "b) Domain Object Modelling",
            "c) MetaModeling",
            "d) Inspections",
            ""
        ],
        "Answer": "Answer: c"
    },
    {
        "id": 158,
        "Question": " ___________ defines “a flexible, holistic product development strategy where a development team works as a unit to reach a common goal”.",
        "Options": [
            "a) Scrum",
            "b) FDD",
            "c) DevOps",
            "d) MDD",
            ""
        ],
        "Answer": "Answer: a"
    },
    {
        "id": 159,
        "Question": "A key principle of Scrum is ______________",
        "Options": [
            "a) Strict requirements",
            "b) Requirements volatility",
            "c) Fixed scale development",
            "d) Cross-functional development",
            ""
        ],
        "Answer": "Answer: b"
    },
    {
        "id": 160,
        "Question": "The _______________ represents the product’s stakeholders and the voice of the customer",
        "Options": [
            "a) Development Team",
            "b) Scrum Master",
            "c) Product Owner",
            "d) Servant-leader",
            ""
        ],
        "Answer": "Answer: c"
    },
    {
        "id": 161,
        "Question": "A _____________ is the basic unit of development in Scrum.",
        "Options": [
            "a) Class",
            "b) Manifesto",
            "c) Slice",
            "d) Sprint",
            ""
        ],
        "Answer": "Answer: d"
    },
    {
        "id": 162,
        "Question": "The Sprint is a/an ___________ effort.",
        "Options": [
            "a) Timeboxed",
            "b) Closed",
            "c) Sandboxed",
            "d) Open",
            ""
        ],
        "Answer": "Answer: a"
    },
    {
        "id": 163,
        "Question": "Each day during a Sprint, the team holds a ______________ with specific guidelines.",
        "Options": [
            "a) Impediment",
            "b) Daily Scrum",
            "c) Backlog refinement",
            "d) Scrum of Scrums",
            ""
        ],
        "Answer": "Answer: b"
    },
    {
        "id": 164,
        "Question": "At the _____________ the team reflects on the past Sprint.",
        "Options": [
            "a) Sprint Review",
            "b) Daily Scrum",
            "c) Sprint Retrospective",
            "d) Sprint Reflection",
            ""
        ],
        "Answer": "Answer: c"
    },
    {
        "id": 165,
        "Question": "The ______________ comprises an ordered list of requirements that a Scrum Team maintains for a product.",
        "Options": [
            "a) Sprint Review",
            "b) Sprint Backlog",
            "c) Product Increment",
            "d) Product backlog",
            ""
        ],
        "Answer": "Answer: d"
    },
    {
        "id": 166,
        "Question": "The _____________ is the list of work the Development Team must address during the next Sprint.",
        "Options": [
            "a) Sprint Review",
            "b) Sprint Backlog",
            "c) Product Increment",
            "d) Product backlog",
            ""
        ],
        "Answer": "Answer: b"
    },
    {
        "id": 167,
        "Question": "The _____________ is the sum of all the Product Backlog Items completed during a Sprint.",
        "Options": [
            "a) Sprint burn-down char",
            "b) Release burn-up chart",
            "c) Potentially shippable increment",
            "d) Scrumban",
            ""
        ],
        "Answer": "Answer: c"
    },
    {
        "id": 168,
        "Question": "______________ is an adaptable process framework, intended to be tailored by the development organizations that will select the elements of the process that are appropriate for their needs.",
        "Options": [
            "a) RUP",
            "b) AOP",
            "c) FDD",
            "d) XP",
            ""
        ],
        "Answer": "Answer: a"
    },
    {
        "id": 169,
        "Question": "UML stands for _______________",
        "Options": [
            "a) Unknown Markup Language",
            "b) Unified Modelling Language",
            "c) Universal Markup Language",
            "d) Universal Modelling Language",
            ""
        ],
        "Answer": "Answer: b"
    },
    {
        "id": 170,
        "Question": "______________ describes a simple and easy to understand approach to developing business application software using agile techniques and concepts while still remaining true to the RUP.",
        "Options": [
            "a) RUPP",
            "b) Scrum",
            "c) AUP",
            "d) EUP",
            ""
        ],
        "Answer": "Answer: c"
    },
    {
        "id": 171,
        "Question": "__________________ is a methodology for modelling and documenting software systems based on best practices.",
        "Options": [
            "a) TDD",
            "b) FDD",
            "c) Scrum",
            "d) AM",
            ""
        ],
        "Answer": "Answer: d"
    },
    {
        "id": 172,
        "Question": "The discipline of AUP which deals with managing access to project artefacts is called ______________",
        "Options": [
            "a) Model",
            "b) Deployment",
            "c) Project Management",
            "d) Configuration Management",
            ""
        ],
        "Answer": "Answer: d"
    },
    {
        "id": 173,
        "Question": "Random testing often known as __________ testing",
        "Options": [
            "a) Monkey",
            "b) Amorous",
            "c) Sporadic",
            "d) Unknown",
            ""
        ],
        "Answer": "Answer: a"
    },
    {
        "id": 174,
        "Question": "Monkey Testing is also included in Android Studio as part of the standard testing tools for ______________",
        "Options": [
            "a) Unit Testing",
            "b) Stress Testing",
            "c) Functional Testing",
            "d) Integration Testing",
            ""
        ],
        "Answer": "Answer: b"
    },
    {
        "id": 175,
        "Question": "______________ have no knowledge about the application or system in monkey testing.",
        "Options": [
            "a) Cloned Objects",
            "b) Smart Monkey tests",
            "c) Dumb Monkey tests",
            "d) Fuzz tests",
            ""
        ],
        "Answer": "Answer: c"
    },
    {
        "id": 176,
        "Question": "Monkey testing is more about random actions while __________ testing is more about random data input.",
        "Options": [
            "a) Fuzz",
            "b) Functional",
            "c) Ad-hoc",
            "d) Random",
            ""
        ],
        "Answer": "Answer: a"
    },
    {
        "id": 177,
        "Question": "Monkey testing is also different from _____________ testing in that ad-hoc testing is performed without planning and documentation.",
        "Options": [
            "a) Fuzz",
            "b) Functional",
            "c) Ad-hoc",
            "d) Random",
            ""
        ],
        "Answer": "Answer: c"
    },
    {
        "id": 178,
        "Question": "___________ is a technique for gathering information about the possible set of values calculated at various points in a computer program.",
        "Options": [
            "a) Data flow analysis",
            "b) Equivalence partitioning",
            "c) Inspections",
            "d) Decision testing",
            ""
        ],
        "Answer": "Answer: a"
    },
    {
        "id": 179,
        "Question": "________________ is a technique used to identify the requirements of a system (usually associated with software/process design) and the information used to both define both processes used and classes (a collection of actors and processes).",
        "Options": [
            "a) Data flow analysis",
            "b) Use Case analysis",
            "c) Exploratory testing",
            "d) Decision testing",
            ""
        ],
        "Answer": "Answer: b"
    },
    {
        "id": 180,
        "Question": "A Use-case realization describes how a particular __________ is realized within the design model.",
        "Options": [
            "a) Class",
            "b) Object",
            "c) Use case",
            "d) Function",
            ""
        ],
        "Answer": "Answer: c"
    },
    {
        "id": 181,
        "Question": "________________ is an approach to software testing that is concisely described as simultaneous learning, test design and test execution.",
        "Options": [
            "a) Data flow analysis",
            "b) Decision testing",
            "c) Exploratory testing",
            "d) Use Case analysis",
            ""
        ],
        "Answer": "Answer: c"
    },
    {
        "id": 182,
        "Question": "Exploratory testing is often thought of as a ______________ technique.",
        "Options": [
            "a) White box testing",
            "b) Functional testing",
            "c) Non-functional testing",
            "d) Black box testing",
            ""
        ],
        "Answer": "Answer: d"
    },
    {
        "id": 183,
        "Question": "The main advantage of exploratory testing is that less _______________ is needed.",
        "Options": [
            "a) Investment",
            "b) Preparation",
            "c) Knowledge",
            "d) Accuracy",
            ""
        ],
        "Answer": "Answer: b"
    },
    {
        "id": 184,
        "Question": "A major benefit of exploratory testing is that testers can use ______________ based on the results of previous results.",
        "Options": [
            "a) Deductive Reasoning",
            "b) Object Creation",
            "c) Garbage Collection",
            "d) Modularity",
            ""
        ],
        "Answer": "Answer: a"
    },
    {
        "id": 185,
        "Question": "Exploratory testing is particularly suitable if _______________ and specifications are incomplete.",
        "Options": [
            "a) Investment",
            "b) Time",
            "c) Requirements",
            "d) Deadlines",
            ""
        ],
        "Answer": "Answer: c"
    },
    {
        "id": 186,
        "Question": "____________ is a software testing technique that divides the input data of a software unit into partitions of equivalent data from which test cases can be derived.",
        "Options": [
            "a) Data flow analysis",
            "b) Equivalence partitioning",
            "c) Inspections",
            "d) Decision testing",
            ""
        ],
        "Answer": "Answer: b"
    },
    {
        "id": 187,
        "Question": "Equivalence Partitioning, Use Case Testing and Decision Testing are ____________ techniques.",
        "Options": [
            "a) Static",
            "b) Dynamic",
            "c) Outdated",
            "d) Infeasible",
            ""
        ],
        "Answer": "Answer: b"
    },
    {
        "id": 188,
        "Question": "The review process for a particular review begins with a _____________ by the author to the moderator in formal review.",
        "Options": [
            "a) Request For Review",
            "b) Requirement Analysis",
            "c) Notice For Review",
            "d) Goal Design",
            ""
        ],
        "Answer": "Answer: a"
    },
    {
        "id": 189,
        "Question": "Configuration management procedures be implemented during ____________",
        "Options": [
            "a) Test Execution",
            "b) Test Planning",
            "c) Test Design",
            "d) Test Success",
            ""
        ],
        "Answer": "Answer: b"
    },
    {
        "id": 190,
        "Question": "______________ is a process which is intended to reveal flaws in the security mechanisms of an information system that protect data and maintain functionality as intended.",
        "Options": [
            "a) Integrity Testing",
            "b) Unit Testing",
            "c) Security Testing",
            "d) Stress testing",
            ""
        ],
        "Answer": "Answer: c"
    },
    {
        "id": 191,
        "Question": "_______________ of information refers to protecting information from being modified by unauthorized parties.",
        "Options": [
            "a) Confidentiality",
            "b) Authentication",
            "c) Authorization",
            "d) Integrity",
            ""
        ],
        "Answer": "Answer: d"
    },
    {
        "id": 192,
        "Question": "________________ means to ensure that a transferred message has been sent and received by the intended parties who are claiming to have sent and received the message.",
        "Options": [
            "a) Confidentiality",
            "b) Authentication",
            "c) Non-repudiation",
            "d) Integrity",
            ""
        ],
        "Answer": "Answer: c"
    },
    {
        "id": 193,
        "Question": "_____________looks for known security issues by using automated tools to match conditions with known vulnerabilities.",
        "Options": [
            "a) Discovery",
            "b) Vulnerability Scan",
            "c) Security Assessment",
            "d) Penetration Test",
            ""
        ],
        "Answer": "Answer: b"
    },
    {
        "id": 194,
        "Question": "__________ uses discovery and vulnerability scanning to identify security vulnerabilities",
        "Options": [
            "a) Discovery",
            "b) Vulnerability Scan",
            "c) Vulnerability Assessment",
            "d) Penetration Test",
            ""
        ],
        "Answer": "Answer: c"
    },
    {
        "id": 195,
        "Question": "_________ is driven by an Audit or a Risk function to look at a specific control or compliance issue.",
        "Options": [
            "a) Security Audit",
            "b) Vulnerability Scan",
            "c) Vulnerability Assessment",
            "d) Penetration Test",
            ""
        ],
        "Answer": "Answer: a"
    },
    {
        "id": 196,
        "Question": "________________ simulates an attack by a malicious party.",
        "Options": [
            "a) Security Audit",
            "b) Vulnerability Scan",
            "c) Vulnerability Assessment",
            "d) Penetration Test",
            ""
        ],
        "Answer": "Answer: d"
    },
    {
        "id": 197,
        "Question": "______________ builds upon Vulnerability Assessment by adding manual verification to confirm exposure.",
        "Options": [
            "a) Security Audit",
            "b) Security Assessment",
            "c) Vulnerability Assessment",
            "d) Penetration Test",
            ""
        ],
        "Answer": "Answer: b"
    },
    {
        "id": 198,
        "Question": "White box testing is also known as _____________",
        "Options": [
            "a) Structure-based testing",
            "b) Black box testing",
            "c) Free testing",
            "d) Closed testing",
            ""
        ],
        "Answer": "Answer: a"
    },
    {
        "id": 199,
        "Question": "White box testing is ______________",
        "Options": [
            "a) Static",
            "b) Dynamic",
            "c) Infeasible",
            "d) Time-consuming",
            ""
        ],
        "Answer": "Answer: b"
    },
    {
        "id": 200,
        "Question": "A _____________ test is when an invalid input is put and errors are received.",
        "Options": [
            "a) Positive",
            "b) Regression",
            "c) Negative",
            "d) Neutral",
            ""
        ],
        "Answer": "Answer: c"
    },
    {
        "id": 201,
        "Question": "A ____________ test is when a valid input is put and some action to be completed in accordance with the specification is expected.",
        "Options": [
            "a) Positive",
            "b) Regression",
            "c) Negative",
            "d) Neutral",
            ""
        ],
        "Answer": "Answer: a"
    },
    {
        "id": 202,
        "Question": "Which tools is involved in the automation of regression test?",
        "Options": [
            "a) Data tester",
            "b) Boundary tester",
            "c) Capture/Playback",
            "d) Output comparator.",
            ""
        ],
        "Answer": "Answer: d"
    },
    {
        "id": 203,
        "Question": "An input field takes the year as input between 1800 and 2016, the boundary values for testing this field are ___________",
        "Options": [
            "a) 1899,1900,2004,2005",
            "b) 1799,1900,2004,2005",
            "c) 1799,1800,2016,2017",
            "d) 1600,1700,1800,1900",
            ""
        ],
        "Answer": "Answer: c"
    },
    {
        "id": 204,
        "Question": "Static analysis cannot ____________",
        "Options": [
            "a) Enforce coding standards",
            "b) Help in code understanding",
            "c) Identify anomalies or defects in the code",
            "d) Detect memory leaks",
            ""
        ],
        "Answer": "Answer: d"
    },
    {
        "id": 205,
        "Question": "_______________ ensures the original fault has been removed.",
        "Options": [
            "a) Regression testing",
            "b) Re-testing",
            "c) Negative testing",
            "d) Positive testing",
            ""
        ],
        "Answer": "Answer: b"
    },
    {
        "id": 206,
        "Question": "_____________ test cases are when random test cases are performed and equivalence partitioning is applied to those test cases.",
        "Options": [
            "a) Random",
            "b) Static",
            "c) Semi-random",
            "d) Equivalent-random",
            ""
        ],
        "Answer": "Answer: c"
    },
    {
        "id": 207,
        "Question": "______________ is normally used to evaluate a product to determine its suitability for intended use and to identify discrepancies.",
        "Options": [
            "a) Supervisor Review",
            "b) Technical Review",
            "c) Decision Review",
            "d) Design Review",
            ""
        ],
        "Answer": "Answer: b"
    },
    {
        "id": 208,
        "Question": "Decision table technique is sometimes also referred to as a ________ table.",
        "Options": [
            "a) Cause-effect",
            "b) Redundant",
            "c) Extreme",
            "d) Isolated",
            ""
        ],
        "Answer": "Answer: a"
    },
    {
        "id": 209,
        "Question": "___________ is a model that illustrates how testing activities integrate with software development phases.",
        "Options": [
            "a) Waterfall Model",
            "b) V-Model",
            "c) Spiral Model",
            "d) Iterative Model",
            ""
        ],
        "Answer": "Answer: b"
    },
    {
        "id": 210,
        "Question": "_____________ is triggered by modifications, migration or retirement of existing software.",
        "Options": [
            "a) Regression Testing",
            "b) Unit Testing",
            "c) Maintenance testing",
            "d) Integration Testing",
            ""
        ],
        "Answer": "Answer: c"
    },
    {
        "id": 211,
        "Question": "RTM stands for ____________",
        "Options": [
            "a) Repeated Trade Matrix",
            "b) Redundant Trace Module",
            "c) Robust Test Mechanism",
            "d) Requirement traceability matrix",
            ""
        ],
        "Answer": "Answer: d"
    },
    {
        "id": 212,
        "Question": "The purpose of the _____________ is to ensure that all requirements defined for a system are tested in the test protocols.",
        "Options": [
            "a) RTM",
            "b) FDD",
            "c) KISS",
            "d) TM",
            ""
        ],
        "Answer": "Answer: a"
    },
    {
        "id": 213,
        "Question": "RTM is prepared ___________",
        "Options": [
            "a) After test case designing",
            "b) Before test case designing",
            "c) During test case designing",
            "d) Not prepared",
            ""
        ],
        "Answer": "Answer: b"
    },
    {
        "id": 214,
        "Question": "In ___________ each component at lower hierarchy is tested individually and then the components that rely upon these components are tested.",
        "Options": [
            "a) Top down testing",
            "b) Unit testing",
            "c) Bottom up",
            "d) Load testing",
            ""
        ],
        "Answer": "Answer: c"
    },
    {
        "id": 215,
        "Question": "Bottom up testing starts with __________",
        "Options": [
            "a) Root",
            "b) Second level roots",
            "c) Inner nodes",
            "d) Terminal nodes",
            ""
        ],
        "Answer": "Answer: d"
    },
    {
        "id": 216,
        "Question": "DRE stands for ____________",
        "Options": [
            "a) Defect Removal Efficiency",
            "b) Detect Redundant Errors",
            "c) Defectively Run Enumerations",
            "d) Detect Random Error",
            ""
        ],
        "Answer": "Answer: a"
    },
    {
        "id": 217,
        "Question": "DRE=Number of bugs while testing /number of bugs while testing + number of bugs _____________",
        "Options": [
            "a) Found redundant",
            "b) Not found",
            "c) Found by user",
            "d) Found by tester",
            ""
        ],
        "Answer": "Answer: c"
    },
    {
        "id": 218,
        "Question": "Which is likely to benefit most from the use of test tools providing test capture and replay facilities?",
        "Options": [
            "a) Regression testing",
            "b) Integration testing",
            "c) System testing",
            "d) User acceptance testing",
            ""
        ],
        "Answer": "Answer: a"
    },
    {
        "id": 219,
        "Question": "While testing a product designed to mark exams, a tester determines that all scores between 90 to 100 yields a grade of A, but scores below 90 will not. This analysis is known as:",
        "Options": [
            "a) Boundary Value Analysis",
            "b) Equivalence Partitioning",
            "c) Positive Analysis",
            "d) Negative Analysis",
            ""
        ],
        "Answer": "Answer: b"
    },
    {
        "id": 220,
        "Question": "Which Life Cycle model has lesser, more or different levels of development and testing, all depending on the project and the software product?",
        "Options": [
            "a) Waterfall",
            "b) Spiral",
            "c) V shaped",
            "d) Iterative",
            ""
        ],
        "Answer": "Answer: c"
    },
    {
        "id": 221,
        "Question": "______________ is a partial measure of test thoroughness.",
        "Options": [
            "a) Boundary value testing",
            "b) Equivalence Partitioning",
            "c) DRE",
            "d) Coverage measurement",
            ""
        ],
        "Answer": "Answer: d"
    },
    {
        "id": 222,
        "Question": "___________ is an error condition hiding another error condition.",
        "Options": [
            "a) Masking",
            "b) Fault Masking",
            "c) Coverage measurement",
            "d) Error Management",
            ""
        ],
        "Answer": "Answer: b"
    },
    {
        "id": 223,
        "Question": "_____________ is based on the project plan, but with greater amounts of detail.",
        "Options": [
            "a) Phase Test Plan",
            "b) Review Plan",
            "c) Review Document",
            "d) Phase Design",
            ""
        ],
        "Answer": "Answer: c"
    },
    {
        "id": 224,
        "Question": "STLC stands for ______________",
        "Options": [
            "a) Software Test Locale Code",
            "b) Software Transfer Limited Code",
            "c) Software Total Licence Control",
            "d) Software Test Life Cycle",
            ""
        ],
        "Answer": "Answer: a"
    },
    {
        "id": 225,
        "Question": "During ___________ testing, code is not executed.",
        "Options": [
            "a) Unit",
            "b) Dynamic",
            "c) Static",
            "d) Equivalence",
            ""
        ],
        "Answer": "Answer: d"
    },
    {
        "id": 226,
        "Question": "Static testing is done using the software __________",
        "Options": [
            "a) Documentation",
            "b) Manual",
            "c) Design",
            "d) Comment",
            ""
        ],
        "Answer": "Answer: c"
    },
    {
        "id": 227,
        "Question": "To perform ____________ the code needs to be in executive form.",
        "Options": [
            "a) Dynamic Testing",
            "b) Static Testing",
            "c) Integration Testing",
            "d) Documentation Testing",
            ""
        ],
        "Answer": "Answer: a"
    },
    {
        "id": 228,
        "Question": "______________ is a process of evaluating software at development phase.",
        "Options": [
            "a) Validation",
            "b) Verification",
            "c) Design Check",
            "d) Design Evaluation",
            ""
        ],
        "Answer": "Answer: b"
    },
    {
        "id": 229,
        "Question": "____________ is the process of checking whether the software meets the customer requirements as well as evaluating it after the development process.",
        "Options": [
            "a) Validation",
            "b) Verification",
            "c) Design Check",
            "d) Design Evaluation",
            ""
        ],
        "Answer": "Answer: a"
    },
    {
        "id": 230,
        "Question": "_________________ is finding defects when the system under goes testing as a whole.",
        "Options": [
            "a) User Acceptance Testing",
            "b) Unit Testing",
            "c) Loss Testing",
            "d) System Testing",
            ""
        ],
        "Answer": "Answer: d"
    },
    {
        "id": 231,
        "Question": "System testing is also known as ____________",
        "Options": [
            "a) User Acceptance Testing",
            "b) Regression Testing",
            "c) End to End Testing",
            "d) Lossless Testing",
            ""
        ],
        "Answer": "Answer: c"
    },
    {
        "id": 232,
        "Question": "UAT stands for ____________",
        "Options": [
            "a) Universal Access Testing",
            "b) Unified Anchor Testing",
            "c) User Access Testing",
            "d) User Acceptance Testing",
            ""
        ],
        "Answer": "Answer: d"
    },
    {
        "id": 233,
        "Question": "__________________ involves running a product through a series of specific  tests  which determine whether the product meets the needs of its users.",
        "Options": [
            "a) User Acceptance Testing",
            "b) Unit Testing",
            "c) Loss Testing",
            "d) System Testing",
            ""
        ],
        "Answer": "Answer: a"
    },
    {
        "id": 234,
        "Question": "_________________ is prepared before the actual testing starts.",
        "Options": [
            "a) Test Scenarios",
            "b) Test Cases",
            "c) Test Script",
            "d) Latent defect",
            ""
        ],
        "Answer": "Answer: a"
    },
    {
        "id": 235,
        "Question": "_______________ is a document that contains the steps that has to be executed.",
        "Options": [
            "a) Test Scenarios",
            "b) Test Cases",
            "c) Test Script",
            "d) Latent defect",
            ""
        ],
        "Answer": "Answer: b"
    },
    {
        "id": 236,
        "Question": "_____________ is written in a programming language and is a short program used to test part of functionality of the software system.",
        "Options": [
            "a) Test Scenarios",
            "b) Test Cases",
            "c) Test Script",
            "d) Latent defect",
            ""
        ],
        "Answer": "Answer: c"
    },
    {
        "id": 237,
        "Question": "_________________ is an existing defect in the system which does not cause any failure.",
        "Options": [
            "a) Latent defect",
            "b) Redundancy",
            "c) Failure",
            "d) Exit Cause",
            ""
        ],
        "Answer": "Answer: a"
    },
    {
        "id": 238,
        "Question": "________________ are set of documents, tools and other components that has to be developed and maintained in support of testing.",
        "Options": [
            "a) Test Functions",
            "b) Test Deliverables",
            "c) Test Solutions",
            "d) Test Mechanisms",
            ""
        ],
        "Answer": "Answer: b"
    },
    {
        "id": 239,
        "Question": "______________ is a technique to identify whether a set of test data is useful by intentionally introducing various code changes (bugs).",
        "Options": [
            "a) Unit Testing",
            "b) Stress Testing",
            "c) Load Testing",
            "d) Mutation Testing",
            ""
        ],
        "Answer": "Answer: d"
    },
    {
        "id": 240,
        "Question": "Mutation testing is a form of ______________",
        "Options": [
            "a) Black Box Testing",
            "b) Redundancy",
            "c) White Box Testing",
            "d) Loss Testing",
            ""
        ],
        "Answer": "Answer: c"
    },
    {
        "id": 241,
        "Question": "Mutation score = _____________ / total number of mutants",
        "Options": [
            "a) Number of mutants killed",
            "b) Number of mutants not killed",
            "c) Total number of mutants",
            "d) Total number of live mutants",
            ""
        ],
        "Answer": "Answer: a"
    },
    {
        "id": 242,
        "Question": "For a mutant to be killed, the test must __________ the mutated statement.",
        "Options": [
            "a) Overlook",
            "b) Ignore",
            "c) Limit",
            "d) Reach",
            ""
        ],
        "Answer": "Answer: d"
    },
    {
        "id": 243,
        "Question": "Input data from the test must __________ the program state by causing different program states for the mutant and the original program.",
        "Options": [
            "a) Reach",
            "b) Infect",
            "c) Kill",
            "d) Destroy",
            ""
        ],
        "Answer": "Answer: b"
    },
    {
        "id": 244,
        "Question": "The incorrect program state must __________ to the program’s output and be checked by the test.",
        "Options": [
            "a) Reach’",
            "b) Infect",
            "c) Propagate",
            "d) Limit",
            ""
        ],
        "Answer": "Answer: c"
    },
    {
        "id": 245,
        "Question": "Mutation Testing follows the ____________ model.",
        "Options": [
            "a) RIP",
            "b) KISS",
            "c) RUN",
            "d) GOD",
            ""
        ],
        "Answer": "Answer: a"
    },
    {
        "id": 246,
        "Question": "The ____________ hypothesis states that most software faults are due to small syntactic errors.",
        "Options": [
            "a) Coupling effect",
            "b) Competent programmer",
            "c)  Higher-order mutation",
            "d) Equivalent mutation",
            ""
        ],
        "Answer": "Answer: b"
    },
    {
        "id": 247,
        "Question": "The ______________ asserts that simple faults can cascade to form other emergent faults.",
        "Options": [
            "a) Coupling effect",
            "b) Competent programmer",
            "c) Higher-order mutation",
            "d) Equivalent mutation",
            ""
        ],
        "Answer": "Answer: a"
    },
    {
        "id": 248,
        "Question": "______________ requires that only the first and second conditions of the RIP model are satisfied.",
        "Options": [
            "a) Weak mutation testing",
            "b) Strong mutation testing",
            "c) Weak test data",
            "d) Strong test data",
            ""
        ],
        "Answer": "Answer: a"
    },
    {
        "id": 249,
        "Question": "Weak mutation is closely related to ____________ methods.",
        "Options": [
            "a) Code Conduct",
            "b) Code Coverage",
            "c) Mutation Coverage",
            "d) Mutation Redundancy",
            ""
        ],
        "Answer": "Answer: b"
    },
    {
        "id": 250,
        "Question": "________________ is a measure used to describe the degree to which the source code of a program is executed when a particular test suite runs.",
        "Options": [
            "a) Code Conduct",
            "b) Code Coverage",
            "c) Mutation Coverage",
            "d) Mutation Redundancy",
            ""
        ],
        "Answer": "Answer: b"
    },
    {
        "id": 251,
        "Question": "_______________ is usually defined as a rule or requirement, which test suite needs to satisfy.",
        "Options": [
            "a) Code Conduct",
            "b) Code Coverage",
            "c) Coverage Criteria",
            "d) Mutation Redundancy",
            ""
        ],
        "Answer": "Answer: c"
    },
    {
        "id": 252,
        "Question": "For the statement if( a || b) , which is not a mutant?",
        "Options": [
            "a) if(a && b)",
            "b) if(a & b)",
            "c) if( a | b)",
            "d) if( a || b)",
            ""
        ],
        "Answer": "Answer: d"
    },
    {
        "id": 253,
        "Question": "Mutants which result in programs which are behaviourally equivalent to the original one are called ________________-",
        "Options": [
            "a) Statement coverage",
            "b) Condition coverage",
            "c) Equivalent Mutants",
            "d) Dead Mutants",
            ""
        ],
        "Answer": "Answer: c"
    },
    {
        "id": 254,
        "Question": "Which function call ensure statement coverage for this function?",
        "Options": [
            "a) example(0,0)",
            "b) example(1,0)",
            "c) example(0,1)",
            "d) example(1,1)",
            ""
        ],
        "Answer": "Answer: d"
    },
    {
        "id": 255,
        "Question": "Which function call ensure function coverage for this function?",
        "Options": [
            "a) ex(1,2)",
            "b) example(3,4)",
            "c) example1(1,2)",
            "d) etra(2,3)",
            ""
        ],
        "Answer": "Answer: b"
    },
    {
        "id": 256,
        "Question": "Which function call ensure branch coverage for this function?",
        "Options": [
            "a) example(1,1)",
            "b) example(0,1)",
            "c) example(1,1) and example(0,1)",
            "d) example(1,1) and example(1,1)",
            ""
        ],
        "Answer": "Answer: c"
    },
    {
        "id": 257,
        "Question": "Which function call ensures condition coverage for this function?",
        "Options": [
            "a) example(1,1)",
            "b) example(0,1)",
            "c) example(1,1) and example(0,1)",
            "d) example(1,0) and example(0,1)",
            ""
        ],
        "Answer": "Answer: d"
    },
    {
        "id": 258,
        "Question": "A combination of function coverage and branch coverage is sometimes also called _______________",
        "Options": [
            "a) Function coverage",
            "b) Statement coverage",
            "c) Decision coverage",
            "d) Condition coverage",
            ""
        ],
        "Answer": "Answer: c"
    },
    {
        "id": 259,
        "Question": "____________ criterion requires that every point of entry and exit in the program has been invoked at least once.",
        "Options": [
            "a) Function coverage",
            "b) Statement coverage",
            "c) Decision coverage",
            "d) Condition coverage",
            ""
        ],
        "Answer": "Answer: c"
    },
    {
        "id": 260,
        "Question": "_____________ criterion extends the decision criteria with specifications that each condition has to affect the decision outcome independently.",
        "Options": [
            "a) Redundant Condition/decision coverage",
            "b) Transferred Condition/decision coverage",
            "c) Modified Condition/decision coverage",
            "d) Lossless Condition/decision coverage",
            ""
        ],
        "Answer": "Answer: a"
    },
    {
        "id": 261,
        "Question": "________________ criterion requires that inside each decision, all combinations of conditions are tested.",
        "Options": [
            "a) Redundant Condition/decision coverage",
            "b) Multiple condition coverage",
            "c) Modified Condition/decision coverage",
            "d) Lossless Condition/decision coverage",
            ""
        ],
        "Answer": "Answer: c"
    },
    {
        "id": 262,
        "Question": "____________ requires that in a method taking parameters, all the common values for such parameters be considered.",
        "Options": [
            "a) Redundant Condition/decision coverage",
            "b) Multiple condition coverage",
            "c) Modified Condition/decision coverage",
            "d) Parameter Value Coverage",
            ""
        ],
        "Answer": " Answer: b"
    },
    {
        "id": 263,
        "Question": "______________ applications are often required to show that testing achieves 100% of some form of code coverage.",
        "Options": [
            "a) Non safe",
            "b) Safety Critical",
            "c) Critical",
            "d) Lossless",
            ""
        ],
        "Answer": "Answer: d"
    },
    {
        "id": 264,
        "Question": "PVC stands for _____________",
        "Options": [
            "a) Parameter Value Condition",
            "b) Parameterised Values Check",
            "c) Parameter Value Coverage",
            "d) Path Value Check",
            ""
        ],
        "Answer": "Answer: b"
    },
    {
        "id": 265,
        "Question": "______________ is a method of achieving complete branch coverage without achieving complete path coverage.",
        "Options": [
            "a) Basis Path Testing",
            "b) Loss Testing",
            "c) Universal Testing",
            "d) Random Testing",
            ""
        ],
        "Answer": "Answer: c"
    },
    {
        "id": 266,
        "Question": "________________ criteria checks whether each state in a finite-state machine been reached and explored.",
        "Options": [
            "a) Path coverage",
            "b) Loop coverage",
            "c) Entry/exit coverage",
            "d) State coverage",
            ""
        ],
        "Answer": "Answer: a"
    },
    {
        "id": 267,
        "Question": "____________ is a software analysis method used to identify structural units in code under test.",
        "Options": [
            "a) Linear code sequence and jump",
            "b) State coverage",
            "c) Lossless packs",
            "d) Linear jumps",
            ""
        ],
        "Answer": "Answer: a"
    },
    {
        "id": 268,
        "Question": "LCSAJ stands for _______________",
        "Options": [
            "a) Loading Code standard as Jumps",
            "b) Linear code sequence and jump",
            "c) Loading code sequence and jump",
            "d) Linear coverage sequence and jump",
            ""
        ],
        "Answer": "Answer: b"
    },
    {
        "id": 269,
        "Question": "The JJ in JJ-path stands for ___________",
        "Options": [
            "a) Just Jump",
            "b) Jump-in-JUnit",
            "c) Java-JUnit",
            "d) Jump-to-Jump",
            ""
        ],
        "Answer": "Answer: d"
    },
    {
        "id": 270,
        "Question": "In a narrower sense, LCSAJ is also called ____________",
        "Options": [
            "a) JJ-Path",
            "b) Code Coverage",
            "c) System Code Analysis",
            "d) Code Breakdown",
            ""
        ],
        "Answer": "Answer: a"
    },
    {
        "id": 271,
        "Question": "______________________ is the most common and least efficient debugging technique.",
        "Options": [
            "a) Brute force debugging",
            "b) Backtracking",
            "c) Cause elimination",
            "d) Program slicing",
            ""
        ],
        "Answer": "Answer: a"
    },
    {
        "id": 272,
        "Question": "An effective method for locating errors in small programs is to ___________ the incorrect results through the logic of the program until the point where the logic went astray is found.",
        "Options": [
            "a) Search",
            "b) Backtrack",
            "c) Slice",
            "d) Eliminate",
            ""
        ],
        "Answer": "Answer: b"
    },
    {
        "id": 273,
        "Question": "__________ involves the use of induction or deduction and introduces the concept of binary partitioning.",
        "Options": [
            "a) Brute force debugging",
            "b) Backtracking",
            "c) Cause elimination",
            "d) Program slicing",
            ""
        ],
        "Answer": "Answer: c"
    },
    {
        "id": 274,
        "Question": "________________ is the computation of the set of programs statements.",
        "Options": [
            "a) Brute force debugging",
            "b) Backtracking",
            "c) Cause elimination",
            "d) Program slicing",
            ""
        ],
        "Answer": "Answer: d"
    },
    {
        "id": 275,
        "Question": "The point at which the program slice affects the values at some point of interest is __________",
        "Options": [
            "a) Slicing criterion",
            "b) Program criterion",
            "c) Sliced Parts criterion",
            "d) Information flow control",
            ""
        ],
        "Answer": "Answer: a"
    },
    {
        "id": 276,
        "Question": "Program slicing can be used in ______________ to locate source of errors more easily.",
        "Options": [
            "a) Testing",
            "b) Coding",
            "c) Debugging",
            "d) Checking",
            ""
        ],
        "Answer": "Answer: c"
    },
    {
        "id": 277,
        "Question": "__________ is an error condition hiding another error condition.",
        "Options": [
            "a) Fault Masking",
            "b) Error Hiding",
            "c) Redundant Masking",
            "d) Fault Gaping",
            ""
        ],
        "Answer": "Answer: a"
    },
    {
        "id": 278,
        "Question": "To get an expected test outcome a standard procedure is followed which is referred as ___________",
        "Options": [
            "a) Testing Mechanism",
            "b) Testing Type",
            "c) Test Cast",
            "d) Test Scope",
            ""
        ],
        "Answer": "Answer: b"
    },
    {
        "id": 279,
        "Question": "The test instantiates ___________ and calls methods on these _________",
        "Options": [
            "a) Objects",
            "b) Classes",
            "c) Services",
            "d) Subsystems",
            ""
        ],
        "Answer": "Answer: a"
    },
    {
        "id": 280,
        "Question": "The test runs while a ___________ or EJB container hosts the application.",
        "Options": [
            "a) Objects",
            "b) Classes",
            "c) Servlet",
            "d) Subsystems",
            ""
        ],
        "Answer": "Answer: c"
    },
    {
        "id": 281,
        "Question": "A layered application may have a front end to handle the presentation and a ______________ to execute the business logic.",
        "Options": [
            "a) Objects",
            "b) Classes",
            "c) Servlet",
            "d) Back end",
            ""
        ],
        "Answer": "Answer: d"
    },
    {
        "id": 282,
        "Question": "______________ tests examine the code at the boundary of its public API.",
        "Options": [
            "a) Unit",
            "b) Integration",
            "c) Functional",
            "d) Loss",
            ""
        ],
        "Answer": "Answer: c"
    },
    {
        "id": 283,
        "Question": "Developers often combine functional tests with __________ tests.",
        "Options": [
            "a) Unit",
            "b) Integration",
            "c) Stress",
            "d) Loss",
            ""
        ],
        "Answer": "Answer: b"
    },
    {
        "id": 284,
        "Question": "Layering provides __________ and the ability to access the back end with several different front ends.",
        "Options": [
            "a) Flexibility",
            "b) Redundancy",
            "c) Authorization",
            "d) Simplicity",
            ""
        ],
        "Answer": "Answer: a"
    },
    {
        "id": 285,
        "Question": "____________ tests examine whether the application can process a large number of requests test types within a given period.",
        "Options": [
            "a) Unit",
            "b) Integration",
            "c) Stress",
            "d) Acceptance",
            ""
        ],
        "Answer": "Answer: c"
    },
    {
        "id": 286,
        "Question": "The stress test environment should be as close as possible to the __________ environment.",
        "Options": [
            "a) Design",
            "b) Review",
            "c) Test",
            "d) Production",
            ""
        ],
        "Answer": "Answer: d"
    },
    {
        "id": 287,
        "Question": "A profiler can look for _________ in an application.",
        "Options": [
            "a) Bottlenecks",
            "b) Redundancies",
            "c) Nodes",
            "d) States",
            ""
        ],
        "Answer": "Answer: a"
    },
    {
        "id": 288,
        "Question": "___________ tests are a superset of all other tests.",
        "Options": [
            "a) Unit",
            "b) Integration",
            "c) Loss",
            "d) Acceptance",
            ""
        ],
        "Answer": "Answer: d"
    },
    {
        "id": 289,
        "Question": "A ___________ is a test that exercises code by focusing on a single method.",
        "Options": [
            "a) Logic unit test",
            "b) Integration unit test",
            "c) Functional unit test",
            "d) Acceptance unit test",
            ""
        ],
        "Answer": "Answer: a"
    },
    {
        "id": 290,
        "Question": "In logic unit test, the boundaries of a given test can be controlled by using __________",
        "Options": [
            "a) Objects",
            "b) Mock objects",
            "c) Controllers",
            "d) Modules",
            ""
        ],
        "Answer": "Answer: b"
    },
    {
        "id": 291,
        "Question": "A ________________is a test that focuses on the interaction between components in their real environment.",
        "Options": [
            "a) Logic unit test",
            "b) Integration unit test",
            "c) Functional unit test",
            "d) Acceptance unit test",
            ""
        ],
        "Answer": "Answer: b"
    },
    {
        "id": 292,
        "Question": "Code that accesses a database has tests that effectively _________ the database.",
        "Options": [
            "a) Ignore",
            "b) Delete",
            "c) Call",
            "d) Define",
            ""
        ],
        "Answer": "Answer: c"
    },
    {
        "id": 293,
        "Question": "A _______________ is a test that extends the boundaries of integration unit testing to confirm a stimulus response.",
        "Options": [
            "a) Logic unit test",
            "b) Integration unit test",
            "c) Functional unit test",
            "d) Acceptance unit test",
            ""
        ],
        "Answer": "Answer: c"
    },
    {
        "id": 294,
        "Question": "_____________ more dependent on an external environment than pure unit tests are.",
        "Options": [
            "a) Logic unit test",
            "b) Integration unit test",
            "c) Functional unit test",
            "d) Acceptance unit test",
            ""
        ],
        "Answer": "Answer: c"
    },
    {
        "id": 295,
        "Question": "__________ are put in scope because they’re often useful as part of the battery of tests run in development.",
        "Options": [
            "a) Logic unit test",
            "b) Integration unit test",
            "c) Functional unit test",
            "d) Acceptance unit test",
            ""
        ],
        "Answer": "Answer: c"
    },
    {
        "id": 296,
        "Question": "Functional Unit tests don’t test a complete ____________ as expected by pure functional tests.",
        "Options": [
            "a) Workflow",
            "b) Object",
            "c) Class",
            "d) Functions",
            ""
        ],
        "Answer": "Answer: a"
    },
    {
        "id": 297,
        "Question": "The __________ test relies exclusively on the external system interface to verify its correctness.",
        "Options": [
            "a) White Box",
            "b) Unit",
            "c) Black Box",
            "d) Loss",
            ""
        ],
        "Answer": "Answer: c"
    },
    {
        "id": 298,
        "Question": "In black box testing, all that is needed to know in order to test the system properly is the system’s ______________",
        "Options": [
            "a) Functional specification",
            "b) Modularity",
            "c) Redundancy",
            "d) Class definition",
            ""
        ],
        "Answer": "Answer: a"
    },
    {
        "id": 299,
        "Question": "White box testing is also known as ______________",
        "Options": [
            "a) Black box testing",
            "b) Sand box testing",
            "c) Closed testing",
            "d) Glass box testing",
            ""
        ],
        "Answer": "Answer: d"
    },
    {
        "id": 300,
        "Question": "White box testing provides better test _________ than black box testing.",
        "Options": [
            "a) Result",
            "b) Coverage",
            "c) Mechanism",
            "d) Acceptance",
            ""
        ],
        "Answer": "Answer: b"
    },
    {
        "id": 301,
        "Question": "________ tests are more difficult to write and run.",
        "Options": [
            "a) White Box",
            "b) Unit",
            "c) Black Box",
            "d) Loss",
            ""
        ],
        "Answer": "Answer: c"
    },
    {
        "id": 302,
        "Question": "Black box tests can bring more ________ than white box tests.",
        "Options": [
            "a) Value",
            "b) Coverage",
            "c) Mechanism",
            "d) Acceptance",
            ""
        ],
        "Answer": "Answer: a"
    },
    {
        "id": 303,
        "Question": "Using ____________ testing, tests can be created that cover the public API of an application.",
        "Options": [
            "a) White Box",
            "b) Unit",
            "c) Black Box",
            "d) Loss",
            ""
        ],
        "Answer": "Answer: c"
    },
    {
        "id": 304,
        "Question": "Higher test coverage is achieved by white box tests because of ____________",
        "Options": [
            "a) Access to more methods",
            "b) Better documentation",
            "c) Faster tests",
            "d) More accepted tests",
            ""
        ],
        "Answer": "Answer: a"
    },
    {
        "id": 305,
        "Question": "____________ tests can control both the inputs to each method and the behaviour of secondary objects.",
        "Options": [
            "a) White Box",
            "b) Unit",
            "c) Black Box",
            "d) Loss",
            ""
        ],
        "Answer": "Answer: a"
    },
    {
        "id": 306,
        "Question": "White box unit tests can be written against ____________ package-private, and public methods.",
        "Options": [
            "a) Static",
            "b) Private",
            "c) Protected",
            "d) Void",
            ""
        ],
        "Answer": "Answer: c"
    },
    {
        "id": 307,
        "Question": "_________ is a free Java tool that calculates the percentage of code accessed by tests.",
        "Options": [
            "a) Cobertura",
            "b) JUnit",
            "c) XUnit",
            "d) Maven",
            ""
        ],
        "Answer": "Answer: a"
    },
    {
        "id": 308,
        "Question": "Cobertura is based on ____________",
        "Options": [
            "a) JUnit",
            "b) XUnit",
            "c) Maven",
            "d) Jcoverage",
            ""
        ],
        "Answer": "Answer: d"
    },
    {
        "id": 309,
        "Question": "In order to measure test coverage, Cobertura creates __________ of class files specified.",
        "Options": [
            "a) Instrumented copies",
            "b) Objects",
            "c) Mocks",
            "d) Images",
            ""
        ],
        "Answer": "Answer: a"
    },
    {
        "id": 310,
        "Question": "While using Cobertura from the command line, which parameter specifies the base directory?",
        "Options": [
            "a) −−datafile",
            "b) −−destination",
            "c) −−ignore",
            "d) −−basedir",
            ""
        ],
        "Answer": "Answer: d"
    },
    {
        "id": 311,
        "Question": "______________ is used to specify the name of the file to use for storing the metadata about the classes.",
        "Options": [
            "a) −−datafile",
            "b) −−destination",
            "c) −−ignore",
            "d) −−basedir",
            ""
        ],
        "Answer": "Answer: a"
    },
    {
        "id": 312,
        "Question": "________ specifies the output directory for the instrumented classes.",
        "Options": [
            "a) −−datafile",
            "b) −−destination",
            "c) −−ignore",
            "d) −−basedir",
            ""
        ],
        "Answer": "Answer: b"
    },
    {
        "id": 313,
        "Question": "___________ specifies a regular expression to filter out certain lines of the source code.",
        "Options": [
            "a) −−datafile",
            "b) −−destination",
            "c) −−ignore",
            "d) −−basedir",
            ""
        ],
        "Answer": "Answer: c"
    },
    {
        "id": 314,
        "Question": "___________ is used to add extra classes and jar files to Cobertura.",
        "Options": [
            "a) −−datafile",
            "b) −−destination",
            "c) −−ignore",
            "d) −−auxClasspath",
            ""
        ],
        "Answer": "Answer: d"
    },
    {
        "id": 315,
        "Question": "The default value for the –datafile parameter is ____________",
        "Options": [
            "a) cobertura.ser",
            "b) cobertura.dat",
            "c) datafile.ser",
            "d) cobertura.log",
            ""
        ],
        "Answer": "Answer: a"
    },
    {
        "id": 316,
        "Question": "To use cobertura, we need to include __________",
        "Options": [
            "a) cobertura.jar",
            "b) junit.jar",
            "c) hamcrest.jar",
            "d) junitCobertura.jar",
            ""
        ],
        "Answer": "Answer: a"
    },
    {
        "id": 317,
        "Question": "The Cobertura command to run while reporting is ____________",
        "Options": [
            "a) cobertura-report.bat",
            "b) cobertura-instrument.bat",
            "c) cobertura-check.bat",
            "d) cobertura-merge.bat",
            ""
        ],
        "Answer": "Answer: a"
    },
    {
        "id": 318,
        "Question": "The ____________ parameter is used to specify the type of report.",
        "Options": [
            "a) datafile",
            "b) basedir",
            "c) encoding",
            "d) format",
            ""
        ],
        "Answer": "Answer: d"
    },
    {
        "id": 319,
        "Question": "____________ parameter specifies the encoding used to read the source.",
        "Options": [
            "a) datafile",
            "b) basedir",
            "c) encoding",
            "d) format",
            ""
        ],
        "Answer": "Answer: c"
    },
    {
        "id": 320,
        "Question": "The source code directories are used to calculate the ____________ of each class.",
        "Options": [
            "a) Data size",
            "b) Lines of code",
            "c) Cyclomatic code complexity",
            "d) Mutant score",
            ""
        ],
        "Answer": "Answer: c"
    },
    {
        "id": 321,
        "Question": "The default value of the format parameter is ____________",
        "Options": [
            "a) html",
            "b) jar",
            "c) java",
            "d) dat",
            ""
        ],
        "Answer": "Answer: a"
    },
    {
        "id": 322,
        "Question": "The Cobertura command to run while checking coverage is ____________",
        "Options": [
            "a) cobertura-report.bat",
            "b) cobertura-instrument.bat",
            "c) cobertura-check.bat",
            "d) cobertura-merge.bat",
            ""
        ],
        "Answer": "Answer: c"
    },
    {
        "id": 323,
        "Question": "“cobertura-check.bat” is run ________ the JUnit tests to show which classes do not have adequate test coverage.",
        "Options": [
            "a) Before",
            "b) After",
            "c) Along with",
            "d) Before and after",
            ""
        ],
        "Answer": "Answer: b"
    },
    {
        "id": 324,
        "Question": "The ___________ parameter specifies the minimum acceptable branch coverage rate needed by each class during Cobetura coverage checking.",
        "Options": [
            "a) datafile",
            "b) branch",
            "c) line",
            "d) regex",
            ""
        ],
        "Answer": "Answer: b"
    },
    {
        "id": 325,
        "Question": "The ___________ parameter specifies the minimum acceptable line coverage rate needed by each class during Cobetura coverage checking.",
        "Options": [
            "a) datafile",
            "b) branch",
            "c) line",
            "d) regex",
            ""
        ],
        "Answer": "Answer: c"
    },
    {
        "id": 326,
        "Question": "The ___________ parameter specifies the minimum acceptable branch coverage rate needed by each package during Cobetura coverage checking.",
        "Options": [
            "a) datafile",
            "b) packagebranch",
            "c) line",
            "d) regex",
            ""
        ],
        "Answer": "Answer: b"
    },
    {
        "id": 327,
        "Question": "The Cobertura command for merging datafiles is ________________",
        "Options": [
            "a) cobertura-report.bat",
            "b) cobertura-instrument.bat",
            "c) cobertura-check.bat",
            "d) cobertura-merge.bat",
            ""
        ],
        "Answer": "Answer: d"
    },
    {
        "id": 328,
        "Question": "In order to write testable code, ______________ should be reduced as much as possible.",
        "Options": [
            "a)  Dependencies",
            "b) Redundancies",
            "c) Objects",
            "d) Classes",
            ""
        ],
        "Answer": "Answer: a"
    },
    {
        "id": 329,
        "Question": "A solution to reducing dependencies is to separate code between methods that instantiate new ____________ and methods that provide application logic.",
        "Options": [
            "a) Classes",
            "b) Objects",
            "c) Modules",
            "d) Functions",
            ""
        ],
        "Answer": "Answer: b"
    },
    {
        "id": 330,
        "Question": "________________ is a design guideline that states that one class should know only as much as it needs to know.",
        "Options": [
            "a) Law of knowledge",
            "b) Class laws",
            "c) Law of Demeter",
            "d) Action methods",
            ""
        ],
        "Answer": "Answer: c"
    },
    {
        "id": 331,
        "Question": "____________ is a useful design pattern that ensures a class has only one instance.",
        "Options": [
            "a) Modular code",
            "b) Lossless paradigm",
            "c) Granular methods",
            "d) Singleton",
            ""
        ],
        "Answer": "Answer: d"
    },
    {
        "id": 332,
        "Question": "The obvious drawback of a singleton is that it introduces _____________ into the application.",
        "Options": [
            "a) Redundancies",
            "b) Errors",
            "c) Global State",
            "d) Modules",
            ""
        ],
        "Answer": "Answer: c"
    },
    {
        "id": 333,
        "Question": "_______________ can easily be used to substitute application code with the test code.",
        "Options": [
            "a) Encapsulation",
            "b) Polymorphism",
            "c) Overloading",
            "d) Static binding",
            ""
        ],
        "Answer": "Answer: b"
    },
    {
        "id": 334,
        "Question": "At runtime, code can’t change a/an ___________ hierarchy.",
        "Options": [
            "a) Encapsulation",
            "b) Polymorphism",
            "c) Overloading",
            "d) Inheritence",
            ""
        ],
        "Answer": "Answer: d"
    },
    {
        "id": 335,
        "Question": "For wrtiting favourable tests, __________ is perferred over inheritance.",
        "Options": [
            "a) Encapsulation",
            "b) Polymorphism",
            "c) Overloading",
            "d) Composition",
            ""
        ],
        "Answer": "Answer: d"
    },
    {
        "id": 336,
        "Question": "One of the main ways to decrease complexity is to try to avoid long _________ and if statements.",
        "Options": [
            "a) switch",
            "b) then",
            "c) default",
            "d) static",
            ""
        ],
        "Answer": "Answer: a"
    },
    {
        "id": 337,
        "Question": "___________ is favoured over conditionals to better write testable code.",
        "Options": [
            "a) Polymorphism",
            "b) Composition",
            "c) Inheritance",
            "d) Overloading",
            ""
        ],
        "Answer": "Answer: a"
    },
    {
        "id": 338,
        "Question": "_____________ is a programming practice that expects new code to be written only if an automated test has failed and also to eliminate duplication.",
        "Options": [
            "a) Object Oriented Testing",
            "b) Test Driven Development",
            "c) Acceptance Testing",
            "d) Lossless Development",
            ""
        ],
        "Answer": "Answer: b"
    },
    {
        "id": 339,
        "Question": "API stands for _______________",
        "Options": [
            "a) Application programming interface",
            "b) Application programming instruction",
            "c) Android programming interface",
            "d) Application performance interface",
            ""
        ],
        "Answer": "Answer: a"
    },
    {
        "id": 340,
        "Question": "When the _________ is used as the method’s first client, it becomes easier to focus purely on the API.",
        "Options": [
            "a) Object",
            "b) Class",
            "c) Test",
            "d) Stub",
            ""
        ],
        "Answer": "Answer: c"
    },
    {
        "id": 341,
        "Question": "________ platform builds the application from its various components.",
        "Options": [
            "a) Development platform",
            "b) Integration platform",
            "c) Acceptance platform",
            "d) Stress test platform",
            ""
        ],
        "Answer": "Answer: b"
    },
    {
        "id": 342,
        "Question": "The ___________ platform is the last staging area before production.",
        "Options": [
            "a) Development platform",
            "b) Integration platform",
            "c) Acceptance platform",
            "d) Pre-production platform",
            ""
        ],
        "Answer": "Answer: b"
    },
    {
        "id": 343,
        "Question": "On the development platform, _________ unit tests are executed.",
        "Options": [
            "a) Acceptance",
            "b) Lossless",
            "c) Logic",
            "d) Functional",
            ""
        ],
        "Answer": "Answer: d"
    },
    {
        "id": 344,
        "Question": "The _____________ exercises the application under load and verifies that it scales correctly.",
        "Options": [
            "a) Development platform",
            "b) Integration platform",
            "c) Acceptance platform",
            "d) Stress test platform",
            ""
        ],
        "Answer": "Answer: c"
    },
    {
        "id": 345,
        "Question": "User feedback is got from the ______________",
        "Options": [
            "a) Development platform",
            "b) Integration platform",
            "c) Acceptance platform",
            "d) Stress test platform",
            ""
        ],
        "Answer": "Answer: d"
    },
    {
        "id": 346,
        "Question": "Using old tests to guard against new changes is a form of ______________",
        "Options": [
            "a) Unit Testing",
            "b) Integration Testing",
            "c) Regression Testing",
            "d) Loss Testing",
            ""
        ],
        "Answer": "Answer: c"
    },
    {
        "id": 347,
        "Question": "A ________ is a piece of code that’s inserted at runtime in place of the real code.",
        "Options": [
            "a) Stub",
            "b) Mock Object",
            "c) Packet",
            "d) Jammer",
            ""
        ],
        "Answer": "Answer: a"
    },
    {
        "id": 348,
        "Question": "The intent of using stubs is to replace a _________ behaviour with a simpler one.",
        "Options": [
            "a) Unique",
            "b) Complex",
            "c) Redundant",
            "d) Anomalous",
            ""
        ],
        "Answer": "Answer: b"
    },
    {
        "id": 349,
        "Question": "Stubs usually provide high _____________ in the tested system.",
        "Options": [
            "a) Mocking",
            "b) Security",
            "c) Confidence",
            "d) Modularity",
            ""
        ],
        "Answer": "Answer: c"
    },
    {
        "id": 350,
        "Question": "Stubs don’t lend themselves well to ____________ unit testing.",
        "Options": [
            "a) Fine-grained",
            "b) Coarse-grained",
            "c) Redundant",
            "d) Functional",
            ""
        ],
        "Answer": "Answer: a"
    },
    {
        "id": 351,
        "Question": "A build or developer usually executes tests involving stubs in their _________ environment.",
        "Options": [
            "a) Dead",
            "b) Running",
            "c) Production",
            "d) Fake",
            ""
        ],
        "Answer": "Answer: b"
    },
    {
        "id": 352,
        "Question": "An implementation that returns a hardcoded value for purposes of testing is known as a __________",
        "Options": [
            "a) Stub",
            "b) Mock Object",
            "c) Packet",
            "d) Jammer",
            ""
        ],
        "Answer": "Answer: a"
    },
    {
        "id": 353,
        "Question": "_____________ is a software testing technique that is useful to help in the generation of test data.",
        "Options": [
            "a) Symbolic Execution",
            "b) Stubs",
            "c) Active testing",
            "d) All-pairs testing",
            ""
        ],
        "Answer": "Answer: a"
    },
    {
        "id": 354,
        "Question": "The ______________ identifies the decision points and the assignments associated with each flow.",
        "Options": [
            "a) Decision Table",
            "b) Flowgraph",
            "c) Testing Design",
            "d) Audit",
            ""
        ],
        "Answer": "Answer: b"
    },
    {
        "id": 355,
        "Question": "_______________ is a Java HTTP (Web) server and Java Servlet container.",
        "Options": [
            "a) Maven",
            "b) Ant",
            "c) Jetty",
            "d) Zimbra",
            ""
        ],
        "Answer": "Answer: a"
    },
    {
        "id": 356,
        "Question": "Jetty was originally called ________________",
        "Options": [
            "a) Eclipse",
            "b) Maven",
            "c) Ant",
            "d) IssueTracker",
            ""
        ],
        "Answer": "Answer: c"
    },
    {
        "id": 357,
        "Question": "To create a Jetty server object, we have to import _____________",
        "Options": [
            "a) org.mortbay.jetty.Server;",
            "b) org.jetty.Server;",
            "c) org.junit.jetty.Server;",
            "d) org.junit.Server;",
            ""
        ],
        "Answer": "Answer: d"
    },
    {
        "id": 358,
        "Question": "In Jetty, ____________ object processes the HTTP requests.",
        "Options": [
            "a) Server",
            "b) Context",
            "c) Root",
            "d) Handler",
            ""
        ],
        "Answer": "Answer: a"
    },
    {
        "id": 359,
        "Question": "To create a Jetty context object, we have to import _____________",
        "Options": [
            "a) org.mortbay.jetty.Context;",
            "b) org.jetty.Context;",
            "c) org.mortbay.jetty.servlet.Context;",
            "d) org.junit.Server;",
            ""
        ],
        "Answer": "Answer: b"
    },
    {
        "id": 360,
        "Question": "The ______________ method sets the document root from which to serve resources.",
        "Options": [
            "a)  setResourceBase",
            "b)  resourceBase",
            "c)  setResource",
            "d)  setBase",
            ""
        ],
        "Answer": "Answer: c"
    },
    {
        "id": 361,
        "Question": "A _____________ handler is attached to the root to serve files from the file system.",
        "Options": [
            "a)  SourceHandler",
            "b)  ResourceHandler",
            "c) AttachHandler",
            "d) RootHandler",
            ""
        ],
        "Answer": "Answer: b"
    },
    {
        "id": 362,
        "Question": "The ResourceHandler is found in the package ________________",
        "Options": [
            "a) org.mortbay.jetty.handler.ResourceHandler",
            "b) org.jetty.handler.ResourceHandler",
            "c) org.mortbay.junit.handler.ResourceHandler",
            "d) org.junit.jetty.handler.ResourceHandler",
            ""
        ],
        "Answer": "Answer: a"
    },
    {
        "id": 363,
        "Question": "To implement a custom URL protocol handler, the URL method __________ is called.",
        "Options": [
            "a) setURLStreamHandlerFactory",
            "b) setURLStreamFactory",
            "c) setURLStreamHandlerFactorySetting",
            "d) setStreamHandlerFactory",
            ""
        ],
        "Answer": "Answer: a"
    },
    {
        "id": 364,
        "Question": "_________ replace the objects with which the methods under test collaborate, offering a layer of isolation.",
        "Options": [
            "a) Classes",
            "b) Mocks",
            "c) Unified Stamps",
            "d) Interfaces",
            ""
        ],
        "Answer": "Answer: b"
    },
    {
        "id": 365,
        "Question": "_____________ are empty shells that supply methods to let the tests have control of the behavior of all the business methods of the faked class.",
        "Options": [
            "a) Stubs",
            "b) Jetty",
            "c) Mocks",
            "d) Interfaces",
            ""
        ],
        "Answer": "Answer: c"
    },
    {
        "id": 366,
        "Question": "The most important point to consider when writing a mock is that it shouldn’t have any __________.",
        "Options": [
            "a) Redundancy",
            "b) Abstraction",
            "c) Matchers",
            "d) Business Logic",
            ""
        ],
        "Answer": "Answer: d"
    },
    {
        "id": 367,
        "Question": "Applying the _________ pattern to a class means removing the creation of all object instances for which this class isn’t directly responsible and passing any needed instances instead.",
        "Options": [
            "a) Message Passing",
            "b) Inversion Of Control",
            "c) Observer Pattern",
            "d) Strategy Pattern",
            ""
        ],
        "Answer": "Answer: b"
    },
    {
        "id": 368,
        "Question": "____________ is an architectural pattern that stores in-memory object data in relational databases.",
        "Options": [
            "a) Active Record Pattern",
            "b) Inversion Of Control",
            "c) Observer Pattern",
            "d) Strategy Pattern",
            ""
        ],
        "Answer": "Answer: a"
    },
    {
        "id": 369,
        "Question": "_____________ in computer science is a programming technique for converting data between incompatible type systems.",
        "Options": [
            "a) Active Record Pattern",
            "b) Inversion Of Control",
            "c) Object Relational Mapping",
            "d) Strategy Pattern",
            ""
        ],
        "Answer": "Answer: c"
    },
    {
        "id": 370,
        "Question": " The ___________ is a software design pattern that allows the interface of an existing class to be used as another interface.",
        "Options": [
            "a) Adapter Pattern",
            "b) Bridge Pattern",
            "c) Decorator Pattern",
            "d) Composite Pattern",
            ""
        ],
        "Answer": "Answer: a"
    },
    {
        "id": 371,
        "Question": "The _______________ is a design pattern that adds behavior to an individual object, either statically or dynamically, without affecting the behavior of other objects from the same class.",
        "Options": [
            "a) Adapter Pattern",
            "b) Bridge Pattern",
            "c) Decorator Pattern",
            "d) Composite Pattern",
            ""
        ],
        "Answer": "Answer: c"
    },
    {
        "id": 372,
        "Question": " The ____________ is a design pattern in object-oriented programming that allows object composition to achieve the same code reuse as inheritance.",
        "Options": [
            "a) Adapter Pattern",
            "b) Bridge Pattern",
            "c) Decorator Pattern",
            "d) Delegation Pattern",
            ""
        ],
        "Answer": "Answer: d"
    },
    {
        "id": 373,
        "Question": "Mocks are Trojan horses because they replace real ___________ from the inside, without the calling classes being aware of it.",
        "Options": [
            "a) Methods",
            "b) Objects",
            "c) Variables",
            "d) Classes",
            ""
        ],
        "Answer": "Answer: b"
    },
    {
        "id": 374,
        "Question": "When we’re talking about mock objects, a/an _________ is a feature built into the mock that verifies whether the external class calling this mock has the correct behavior.",
        "Options": [
            "a) Expectation",
            "b) Explanation",
            "c) Behavior",
            "d) Amorous",
            ""
        ],
        "Answer": "Answer: a"
    },
    {
        "id": 375,
        "Question": "EasyMock relies heavily on the __________import feature of Java.",
        "Options": [
            "a) Dynamic",
            "b) Static",
            "c) Class",
            "d) Object",
            ""
        ],
        "Answer": "Answer: a"
    },
    {
        "id": 376,
        "Question": "To use the createMock method of EasyMock we need to import ___________",
        "Options": [
            "a) org.easymock.EasyMock.createMock",
            "b) org.EasyMock.createMock",
            "c) org.easymock.createMock",
            "d) org.createMock",
            ""
        ],
        "Answer": "Answer: b"
    },
    {
        "id": 377,
        "Question": "__________ method creates a mock object that implements the given interface, order checking is enabled by default.",
        "Options": [
            "a) createNiceControl",
            "b) createMockBuilder",
            "c) createNiceMock",
            "d) createStrictMock",
            ""
        ],
        "Answer": "Answer: a"
    },
    {
        "id": 378,
        "Question": "___________ is used for the creation of a mock object, with the specification of it being of the requested type, which has implementations of the given interface or extends the given class.",
        "Options": [
            "a) createMock(Class<T> toMock)",
            "b) createMock(MockType type, Class<T> toMock)",
            "c) createMock(String name, Class<T>toMock)",
            "d) createMock(String name, MockType type, Class<T>toMock)",
            ""
        ],
        "Answer": "Answer: d"
    },
    {
        "id": 379,
        "Question": "__________________ creates a mock object, of the requested type and name which are passed, which also has implementations of the given interface or extends the given class.",
        "Options": [
            "a) createMock(Class <T> toMock)",
            "b) createMock(MockType type, Class<T> toMock)",
            "c) createMock(String name, Class<T> toMock)",
            "d) createMock(String name, MockType type, Class<T> toMock)",
            ""
        ],
        "Answer": "Answer: b"
    },
    {
        "id": 380,
        "Question": "______________ creates a mock object that implements the given interface with the specification is that order checking is disabled by default.",
        "Options": [
            "a) createMock(Class<T> toMock)",
            "b) createMock(MockType type, Class<T>toMock)",
            "c) createMock(String name, Class<T> toMock)",
            "d) createMock(String name, MockType type, Class<T> toMock)",
            ""
        ],
        "Answer": "Answer: d"
    },
    {
        "id": 381,
        "Question": "createMock(String name, Class<T> toMock) throws _________________ exception.",
        "Options": [
            "a) IndexOutOfBounds",
            "b) IllegalArgumentException",
            "c) NullPointer",
            "d) Arithmetic",
            ""
        ],
        "Answer": "Answer: c"
    },
    {
        "id": 382,
        "Question": "________________ creates a mock builder allowing to create a partial mock for the given class or interface.",
        "Options": [
            "a) createMockBuilder(Class<T> toMock)",
            "b) createMock(Class<T> toMock)",
            "c) createNiceControl()",
            "d) createNiceMock(Class<T> toMock)",
            ""
        ],
        "Answer": "Answer: a"
    },
    {
        "id": 383,
        "Question": "The ____________ interface is used in the creation of partial mocks with EasyMock.",
        "Options": [
            "a) IMockBuilder<T>",
            "b) IMocker<T>",
            "c) IBuilder<T>expect(T value)",
            "d) MockBuilder<T>",
            ""
        ],
        "Answer": "Answer: a"
    },
    {
        "id": 384,
        "Question": "____________ creates a control of the requested type.",
        "Options": [
            "a) createControl()",
            "b) createControl(MockType type)",
            "c) createNiceControl()",
            "d) createNiceMock(Class<T> toMock)",
            ""
        ],
        "Answer": "Answer: b"
    },
    {
        "id": 385,
        "Question": "_____________ returns the expectation setter for the last expected invocation in the current thread.",
        "Options": [
            "a) createControl()",
            "b) createControl(MockType type)",
            "c) createNiceControl()",
            "d) expect(T value)",
            ""
        ],
        "Answer": "Answer: d"
    },
    {
        "id": 386,
        "Question": "_____________ expects a comparable argument greater than or equal the given value.",
        "Options": [
            "a) anyObject()",
            "b) anyString()",
            "c) geq(Comparable<T> value)",
            "d) anyDouble()",
            ""
        ],
        "Answer": "Answer: b"
    },
    {
        "id": 387,
        "Question": "______________ create a new capture instance that will keep only the last captured value.",
        "Options": [
            "a) newCapture()",
            "b) makeThreadSafe()",
            "c) createNiceControl()",
            "d) createNiceMock(Class<T> toMock)",
            ""
        ],
        "Answer": "Answer: c"
    },
    {
        "id": 388,
        "Question": "_____________ reports an argument matcher.",
        "Options": [
            "a) newCapture()",
            "b) makeThreadSafe()",
            "c) reportMatcher(IArgumentMatcher matcher)",
            "d) createNiceMock(Class<T> toMock)",
            ""
        ],
        "Answer": "Answer: a"
    },
    {
        "id": 389,
        "Question": "The _______________ interface decides whether an actual argument is accepted.",
        "Options": [
            "a) IMockBuilder<T>",
            "b) IMocker<T>",
            "c) IBuilder<T>expect(T value)",
            "d) IArgumentMatcher",
            ""
        ],
        "Answer": "Answer: a"
    },
    {
        "id": 390,
        "Question": "The __________ interface allows setting expectations for an associated expected invocation.",
        "Options": [
            "a) IMocksControl",
            "b) IExpectationSetters<T>",
            "c) IExpectation<T>",
            "d) Isetters<T>",
            ""
        ],
        "Answer": "Answer: b"
    },
    {
        "id": 391,
        "Question": "_____________ function expect the last invocation any times.",
        "Options": [
            "a) andStubReturn(T value)",
            "b) andThrow(Throwable throwable)",
            "c) anyTimes()",
            "d) asStub()",
            ""
        ],
        "Answer": "Answer: c"
    },
    {
        "id": 392,
        "Question": "______________ sets stub behavior for the expected invocation.",
        "Options": [
            "a) andStubReturn(T value)",
            "b) andThrow(Throwable throwable)",
            "c) anyTimes()",
            "d) asStub()",
            ""
        ],
        "Answer": "Answer: d"
    },
    {
        "id": 393,
        "Question": "_______________ expect the last invocation between min and max times.",
        "Options": [
            "a) times(int count)",
            "b) times(int min, int max)",
            "c) once()",
            "d) asStub()",
            ""
        ],
        "Answer": "Answer: b"
    },
    {
        "id": 394,
        "Question": "____________ expect the last invocation a specified number of times.",
        "Options": [
            "a) times(int count)",
            "b) times(int min, int max)",
            "c) once()",
            "d) asStub()",
            ""
        ],
        "Answer": "Answer: a"
    },
    {
        "id": 395,
        "Question": "_____________ sets a stub object that will be used for the calculation of the answer for the expected invocation.",
        "Options": [
            "a) andAnswer(IAnswer<? extends T>answer)",
            "b) andDelegateTo(Object delegateTo)",
            "c) andStubAnswer(IAnswer<? extends T> answer)",
            "d) andThrow(Throwable throwable)",
            ""
        ],
        "Answer": "Answer: c"
    },
    {
        "id": 396,
        "Question": "_______________ sets a stub object implementing the same interface as the mock.",
        "Options": [
            "a) andAnswer(IAnswer<? extends T> answer)",
            "b) andDelegateTo(Object delegateTo)",
            "c) andStubAnswer(IAnswer<? extends T> answer)",
            "d) andStubDelegateTo(Object delegateTo)",
            ""
        ],
        "Answer": "Answer: d"
    },
    {
        "id": 397,
        "Question": "_____________ records a call but returns nothing.",
        "Options": [
            "a) andVoid()",
            "b) times(int min, int max)",
            "c) once()",
            "d) asStub()",
            ""
        ],
        "Answer": "Answer: a"
    },
    {
        "id": 398,
        "Question": "_____________ expects the last invocation once.",
        "Options": [
            "a) andVoid()",
            "b) times(int min, int max)",
            "c) once()",
            "d) asStub()",
            ""
        ],
        "Answer": "Answer: c"
    },
    {
        "id": 399,
        "Question": "_______________ sets a return value that will be returned for the expected invocation.",
        "Options": [
            "a) andReturn(T value)",
            "b) times(int min, int max)",
            "c) once()",
            "d) asStub()",
            ""
        ],
        "Answer": "Answer: a"
    },
    {
        "id": 400,
        "Question": "_______________ contains implementations of the core interfaces that are used to adjust or extend jMock’s basic functionality.",
        "Options": [
            "a) org.jmock",
            "b) org.jmock.api",
            "c) org.jmock.lib",
            "d) org.jmock.integration.junit3",
            ""
        ],
        "Answer": "Answer: c"
    },
    {
        "id": 401,
        "Question": "______________ integrates jMock with JUnit 3.",
        "Options": [
            "a) org.jmock",
            "b) org.jmock.api",
            "c) org.jmock.lib",
            "d) org.jmock.integration.junit3",
            ""
        ],
        "Answer": "Answer: d"
    },
    {
        "id": 402,
        "Question": "Which package contains interfaces that define jMock’s Domain Specific Embedded Language?",
        "Options": [
            "a) org.jmock",
            "b) org.jmock.syntax",
            "c) org.jmock.lib",
            "d) org.jmock.integration.junit3",
            ""
        ],
        "Answer": "Answer: b"
    },
    {
        "id": 403,
        "Question": "________________ contains classes to help test concurrent code with jMock.",
        "Options": [
            "a) org.jmock.concurrent",
            "b) org.jmock.syntax",
            "c) org.jmock.lib",
            "d) org.jmock.integration.junit3",
            ""
        ],
        "Answer": "Answer: a"
    },
    {
        "id": 404,
        "Question": "______________ is a class that “blitzes” an object by calling it many times, from multiple threads.",
        "Options": [
            "a) Blitzer",
            "b) DeterministicExecutor",
            "c) DeterministicScheduler",
            "d) Synchroniser",
            ""
        ],
        "Answer": "Answer: a"
    },
    {
        "id": 405,
        "Question": "__________ class is an Executor that executes commands on the thread that calls runPendingCommands or runUntilIdle.",
        "Options": [
            "a) Blitzer",
            "b) DeterministicExecutor",
            "c) DeterministicScheduler",
            "d) Synchroniser",
            ""
        ],
        "Answer": "Answer: b"
    },
    {
        "id": 406,
        "Question": "____________ Exception is thrown to report that a DeterministicScheduler has been asked to perform a blocking wait, which is not supported.",
        "Options": [
            "a) UnsupportedSynchronousOperationException",
            "b) ArrayIndexOutOfBounds",
            "c) StringIndexoutOfBounds",
            "d) Arithmetic",
            ""
        ],
        "Answer": "Answer: a"
    },
    {
        "id": 407,
        "Question": "______________ is a ScheduledExecutorService that executes commands on the thread that calls runNextPendingCommand, runUntilIdle or tick.",
        "Options": [
            "a) Blitzer",
            "b) DeterministicExecutor",
            "c) DeterministicScheduler",
            "d) Synchroniser",
            ""
        ],
        "Answer": "Answer: a"
    },
    {
        "id": 408,
        "Question": "___________ is a ThreadingPolicy that makes the Mockery thread-safe and helps tests synchronize with background threads.",
        "Options": [
            "a) Blitzer",
            "b) DeterministicExecutor",
            "c) DeterministicScheduler",
            "d) Synchroniser",
            ""
        ],
        "Answer": "Answer: d"
    },
    {
        "id": 409,
        "Question": "____________ Interface objects executes submitted Runnable tasks.",
        "Options": [
            "a) Executor",
            "b) Execution",
            "c) Runner",
            "d) RunWith",
            ""
        ],
        "Answer": "Answer: a"
    },
    {
        "id": 410,
        "Question": "The Executor implementations provided implement ____________ which is a more extensive interface.",
        "Options": [
            "a) ExecutorService",
            "b) ThreadPoolExecutor",
            "c) ArrayDeque",
            "d) SerialExecutor",
            ""
        ],
        "Answer": "Answer: a"
    },
    {
        "id": 411,
        "Question": "The __________ command executes the given command at some time in the future.",
        "Options": [
            "a) Execution()",
            "b) execute(Runnable command)",
            "c) scheduleNext()",
            "d) poll()",
            ""
        ],
        "Answer": "Answer: b"
    },
    {
        "id": 412,
        "Question": "The _____________ exception can be thrown by the execute(Runnable command) function.",
        "Options": [
            "a) Arithmetic",
            "b) ArrayIndexOutOfBounds",
            "c) StringIndexOutOfBounds",
            "d) RejectedExecutionException",
            ""
        ],
        "Answer": "Answer: d"
    },
    {
        "id": 413,
        "Question": "Other than RejectedExecutionException, the execute(Runnable command) function can also throw which exception?",
        "Options": [
            "a) Arithmetic",
            "b) ArrayIndexOutOfBounds",
            "c) StringIndexOutOfBounds",
            "d) NullPointerException",
            ""
        ],
        "Answer": "Answer: d"
    },
    {
        "id": 414,
        "Question": "______________ runs all commands that are currently pending.",
        "Options": [
            "a) runUntilIdle",
            "b) runPendingCommands",
            "c) execute",
            "d) isIdle",
            ""
        ],
        "Answer": "Answer: b"
    },
    {
        "id": 415,
        "Question": "____________ runs executed commands until there are no commands pending execution.",
        "Options": [
            "a) runUntilIdle",
            "b) runPendingCommands",
            "c) execute",
            "d) isIdle",
            ""
        ],
        "Answer": "Answer: a"
    },
    {
        "id": 416,
        "Question": "____________ returns whether this executor is idle.",
        "Options": [
            "a) runUntilIdle",
            "b) runPendingCommands",
            "c) execute",
            "d) isIdle",
            ""
        ],
        "Answer": "Answer: d"
    },
    {
        "id": 417,
        "Question": "____________ runs time forwards by a given duration, executing any commands scheduled for execution during that time period.",
        "Options": [
            "a) runUntilIdle",
            "b) runPendingCommands",
            "c) tick",
            "d) isIdle",
            ""
        ],
        "Answer": "Answer: c"
    },
    {
        "id": 418,
        "Question": "________________ blocks until all tasks have completed execution after a shutdown request, or the timeout occurs.",
        "Options": [
            "a) awaitTermination",
            "b) runPendingCommands",
            "c) tick",
            "d) isIdle",
            ""
        ],
        "Answer": "Answer: a"
    },
    {
        "id": 419,
        "Question": "________ submits a value-returning task for execution and returns a Future representing the pending results of the task.",
        "Options": [
            "a) submit(Callable<T> task)",
            "b) awaitTermination",
            "c) submit(Runnable task, T result)",
            "d) invokeAll()",
            ""
        ],
        "Answer": "Answer: a"
    },
    {
        "id": 420,
        "Question": "____________ submits a Runnable task for execution and returns a Future representing that task.",
        "Options": [
            "a) submit(Callable<T> task)",
            "b) awaitTermination",
            "c) submit(Runnable task, T result)",
            "d) invokeAll()",
            ""
        ],
        "Answer": "Answer: c"
    },
    {
        "id": 421,
        "Question": "_____________ returns true if all tasks have completed following shut down.",
        "Options": [
            "a) submit(Callable<T> task)",
            "b) isTerminated",
            "c) submit(Runnable task, T result)",
            "d) invokeAll()",
            ""
        ],
        "Answer": "Answer: b"
    },
    {
        "id": 422,
        "Question": "_____________ returns true if this executor has been shut down.",
        "Options": [
            "a) isShutdown",
            "b) isTerminated",
            "c) submit(Runnable task, T result)",
            "d) invokeAll()",
            ""
        ],
        "Answer": "Answer: a"
    },
    {
        "id": 423,
        "Question": "_______________ is used for the execution of the given tasks, returning a list of Futures holding their status and results after completion.",
        "Options": [
            "a) isShutdown",
            "b) isTerminated",
            "c) invokeAll(Collection<? extends Callable<T>> tasks)",
            "d) invokeAll(Collection<? extends Callable<T>> tasks, long timeout, TimeUnit unit)",
            ""
        ],
        "Answer": "Answer: c"
    },
    {
        "id": 424,
        "Question": "______________ executes the given tasks, returning the result of one that has completed successfully.",
        "Options": [
            "a) isShutdown",
            "b) invokeAny(Collection<? extends Callable<T>> tasks)",
            "c) invokeAll(Collection<? extends Callable<T>> tasks)",
            "d) invokeAll(Collection<? extends Callable<T>> tasks, long timeout, TimeUnit unit)",
            ""
        ],
        "Answer": "Answer: b"
    },
    {
        "id": 425,
        "Question": "_____________ exception is thrown while invokeAll() is interrupted while waiting.",
        "Options": [
            "a) InterruptedException",
            "b) NullPointerException",
            "c) RejectedExecutionException",
            "d) ArrayIndexOutOfBoundsException",
            ""
        ],
        "Answer": "Answer: a"
    },
    {
        "id": 426,
        "Question": "________________ initiates an orderly shutdown in which previously submitted tasks are executed.",
        "Options": [
            "a) Shutdown",
            "b) invokeAny(Collection<? extends Callable<T>> tasks)",
            "c) invokeAll(Collection<? extends Callable<T>> tasks)",
            "d) invokeAll(Collection<? extends Callable<T>> tasks, long timeout, TimeUnit unit)",
            ""
        ],
        "Answer": "Answer: a"
    },
    {
        "id": 427,
        "Question": "The __________ package contains plugins that make it easier to use jMock with legacy code.",
        "Options": [
            "a) org.jmock.api",
            "b) org.jmock.lib.action",
            "c) org.jmock.lib.script",
            "d) org.jmock.lib.legacy",
            ""
        ],
        "Answer": "Answer: d"
    },
    {
        "id": 428,
        "Question": "_____________ class enables to imposterise abstract and concrete classes without calling the constructors of the mocked class.",
        "Options": [
            "a) ClassImposteriser",
            "b) Imposteriser",
            "c) ImposterisingClass",
            "d) Imposter",
            ""
        ],
        "Answer": "Answer: a"
    },
    {
        "id": 429,
        "Question": "________ method reports if the Imposteriser is able to imposterise a given type.",
        "Options": [
            "a) canImposterise(Class<?> type)",
            "b) Imposterise(Class<?> type)",
            "c) imposterise(Invokable mockObject, Class<T> mockedType, Class<?>… ancilliaryTypes)",
            "d) imposter()",
            ""
        ],
        "Answer": "Answer: a"
    },
    {
        "id": 430,
        "Question": "___________ creates an imposter for a given type that forwards Invocations to an Invokable object.",
        "Options": [
            "a) canImposterise(Class<?> type)",
            "b) Imposterise(Class<?> type)",
            "c) imposterise(Invokable mockObject, Class<T> mockedType, Class<?>… ancilliaryTypes)",
            "d) imposter()",
            ""
        ],
        "Answer": "Answer: c"
    },
    {
        "id": 431,
        "Question": " The __________ package contains plugins that make it easier to write custom actions by scripting their behaviour with BeanShell.",
        "Options": [
            "a) org.jmock.api",
            "b) org.jmock.lib.action",
            "c) org.jmock.lib.script",
            "d) org.jmock.lib.legacy",
            ""
        ],
        "Answer": "Answer: b"
    },
    {
        "id": 432,
        "Question": "___________ class is an Action that executes a BeanShell script.",
        "Options": [
            "a) ScriptedAction",
            "b) Scripted",
            "c) Action",
            "d) ScriptedActionClass",
            ""
        ],
        "Answer": "Answer: a"
    },
    {
        "id": 433,
        "Question": "______________ method performs an action in response to an invocation.",
        "Options": [
            "a) describeTo(Description description)",
            "b) invoke(Invocation invocation)",
            "c) perform(String script)",
            "d) where(String name, Object value)",
            ""
        ],
        "Answer": "Answer: c"
    },
    {
        "id": 434,
        "Question": "The invoke method throws which exception?",
        "Options": [
            "a) ArrayIndexOutOfBounds",
            "b) StringIndexOutOfBounds",
            "c) Throwable",
            "d) NullPointer",
            ""
        ],
        "Answer": "Answer: a"
    },
    {
        "id": 435,
        "Question": "___________ creates an action that performs the given script.",
        "Options": [
            "a) describeTo(Description description)",
            "b) invoke(Invocation invocation)",
            "c) perform(String script)",
            "d) where(String name, Object value)",
            ""
        ],
        "Answer": "Answer: c"
    },
    {
        "id": 436,
        "Question": "____________ defines a variable that can be referred to by the script.",
        "Options": [
            "a) describeTo(Description description)",
            "b) invoke(Invocation invocation)",
            "c) perform(String script)",
            "d) where(String name, Object value)",
            ""
        ],
        "Answer": "Answer: d"
    },
    {
        "id": 437,
        "Question": "____________ package contains actions that fake the behavior of mocked invocations.",
        "Options": [
            "a) org.jmock",
            "b) org.jmock.lib.action",
            "c) org.jmock.lib",
            "d) org.jmock.lib.script",
            ""
        ],
        "Answer": "Answer: b"
    },
    {
        "id": 438,
        "Question": "_____________ returns the next of a sequence of elements each time it is invoked.",
        "Options": [
            "a) ActionSequence",
            "b) CustomAction",
            "c) DoAllAction",
            "d) ReturnValueAction",
            ""
        ],
        "Answer": "Answer: a"
    },
    {
        "id": 439,
        "Question": "The exception thrown by the ActionSequence mehod is _____________",
        "Options": [
            "a) NullPointer",
            "b) Throwable",
            "c) ArrayIndexOutOfBounds",
            "d) Arithmetic",
            ""
        ],
        "Answer": "Answer: b"
    },
    {
        "id": 440,
        "Question": "______________ is a partial implementation of the Action interface that making it easy to implement actions specific to applications with inline anonymous classes.",
        "Options": [
            "a) ActionSequence",
            "b) CustomAction",
            "c) DoAllAction",
            "d) ReturnValueAction",
            ""
        ],
        "Answer": "Answer: b"
    },
    {
        "id": 441,
        "Question": "_____________ performs multiple actions every time it is invoked.",
        "Options": [
            "a) ActionSequence",
            "b) CustomAction",
            "c) DoAllAction",
            "d) ReturnValueAction",
            ""
        ],
        "Answer": "Answer: c"
    },
    {
        "id": 442,
        "Question": "___________ returns an Enumeration over a collection.",
        "Options": [
            "a) ActionSequence",
            "b) CustomAction",
            "c) DoAllAction",
            "d) ReturnEnumerationAction",
            ""
        ],
        "Answer": "Answer: d"
    },
    {
        "id": 443,
        "Question": "___________ returns an iterator over a collection.",
        "Options": [
            "a) ActionSequence",
            "b) CustomAction",
            "c) ReturnIteratorAction",
            "d) ReturnEnumerationAction",
            ""
        ],
        "Answer": "Answer: c"
    },
    {
        "id": 444,
        "Question": "____________ translates ExpectationErrors into AssertionErrors that several test frameworks, including JUnit 4 and TestNG, use to report errors.",
        "Options": [
            "a) AssertionErrorTranslator",
            "b) CamelCaseNamingScheme",
            "c) CurrentStateMatcher",
            "d) IdentityExpectationErrorTranslator",
            ""
        ],
        "Answer": "Answer: a"
    },
    {
        "id": 445,
        "Question": "__________ is an ExpectationErrorTranslator that doesn’t do any translation.",
        "Options": [
            "a) AssertionErrorTranslator",
            "b) CamelCaseNamingScheme",
            "c) CurrentStateMatcher",
            "d) IdentityExpectationErrorTranslator",
            ""
        ],
        "Answer": "Answer: b"
    },
    {
        "id": 446,
        "Question": "__________ is an Imposteriser that uses the Proxy class of the Java Reflection API.",
        "Options": [
            "a) AssertionErrorTranslator",
            "b) CamelCaseNamingScheme",
            "c) JavaReflectionImposteriser",
            "d) IdentityExpectationErrorTranslator",
            ""
        ],
        "Answer": "Answer: d"
    },
    {
        "id": 447,
        "Question": "___________ is a naming scheme in which the implicit name for a mock object is the last word of the mocked type’s name in lower case.",
        "Options": [
            "a) AssertionErrorTranslator",
            "b) CamelCaseNamingScheme",
            "c) JavaReflectionImposteriser",
            "d) LastWordNamingScheme",
            ""
        ],
        "Answer": "Answer: c"
    },
    {
        "id": 448,
        "Question": "__________ is a naming scheme in which the implicit name for a mock object is the mocked type’s name prepend with “mock”.",
        "Options": [
            "a) RetroNamingScheme",
            "b) CamelCaseNamingScheme",
            "c) JavaReflectionImposteriser",
            "d) LastWordNamingScheme",
            ""
        ],
        "Answer": "Answer: d"
    },
    {
        "id": 449,
        "Question": "__________ function translates the given ExpectationError into an error type compatible with another testing framework.",
        "Options": [
            "a) change()",
            "b) translate()",
            "c) compatible()",
            "d) mock()",
            ""
        ],
        "Answer": "Answer: a"
    },
    {
        "id": 450,
        "Question": "___________ interface defines a sequence of expectations.",
        "Options": [
            "a) Sequence",
            "b) States",
            "c) Expectations",
            "d) Mockery",
            ""
        ],
        "Answer": "Answer: b"
    },
    {
        "id": 451,
        "Question": "__________ is an interface which defines a state machine that is used to constrain the order of invocations.",
        "Options": [
            "a) Sequence",
            "b) States",
            "c) Expectations",
            "d) Mockery",
            ""
        ],
        "Answer": "Answer: a"
    },
    {
        "id": 452,
        "Question": "____________ class represents the context, or neighborhood, of the object(s) under test.",
        "Options": [
            "a) Sequence",
            "b) States",
            "c) Expectations",
            "d) Mockery",
            ""
        ],
        "Answer": "Answer: b"
    },
    {
        "id": 453,
        "Question": "____________ translates ExpectationErrors into JUnit’s AssertionFailedErrors.",
        "Options": [
            "a) JUnit3ErrorTranslator",
            "b) JUnit3Mockery",
            "c) MockObjectTestCase",
            "d) VerifyingTestCase",
            ""
        ],
        "Answer": "Answer: a"
    },
    {
        "id": 454,
        "Question": "__________ is a TestCase that supports testing with mock objects.",
        "Options": [
            "a) JUnit3ErrorTranslator",
            "b) JUnit3Mockery",
            "c) MockObjectTestCase",
            "d) VerifyingTestCase",
            ""
        ],
        "Answer": "Answer: a"
    },
    {
        "id": 455,
        "Question": "____________ is a TestCase that verifies postconditions after the test has run and before the fixture has been torn down.",
        "Options": [
            "a) JUnit3ErrorTranslator",
            "b) JUnit3Mockery",
            "c) MockObjectTestCase",
            "d) VerifyingTestCase",
            ""
        ],
        "Answer": "Answer: a"
    },
    {
        "id": 456,
        "Question": "A _________ is a JUnit Rule that manages JMock expectations and allowances.",
        "Options": [
            "a) JunitRuleMockery",
            "b) JmockRuleMockery",
            "c) JunitRule",
            "d) JunitMockery",
            ""
        ],
        "Answer": "Answer: a"
    },
    {
        "id": 457,
        "Question": "The __________ class provides factory methods for the executor services provided in the package.",
        "Options": [
            "a) Executors",
            "b) Exceptions",
            "c) ReadOnly",
            "d) AbstractMock",
            ""
        ],
        "Answer": "Answer: b"
    },
    {
        "id": 458,
        "Question": "A __________ offers services for the components it’s hosting, such as lifecycle, security, transaction, distribution, and so forth.",
        "Options": [
            "a) Component",
            "b) Container",
            "c) Mock",
            "d) Appraisal",
            ""
        ],
        "Answer": "Answer: a"
    },
    {
        "id": 459,
        "Question": "Stubs work well to ________ a given class for testing and asserting the state of its instances.",
        "Options": [
            "a) Delete",
            "b) Enhance",
            "c) Isolate",
            "d) Append",
            ""
        ],
        "Answer": "Answer: a"
    },
    {
        "id": 460,
        "Question": "The biggest advantage of mock objects over in-container testing is that mocks don’t require a ________ container in order to execute tests.",
        "Options": [
            "a) Running",
            "b) Closed",
            "c) Open",
            "d) Static",
            ""
        ],
        "Answer": "Answer: a"
    },
    {
        "id": 461,
        "Question": "___________ contains helper classes for ant properties.",
        "Options": [
            "a) org.apache.tools.ant.property",
            "b) org.apache.tools.ant.types",
            "c) org.apache.tools.ant.util",
            "d) org.apache.tools.ant.taskdefs",
            ""
        ],
        "Answer": "Answer: a"
    },
    {
        "id": 462,
        "Question": "____________ is the interface to a class to get a property in apache ant.",
        "Options": [
            "a) ParseNextProperty",
            "b) PropertyExpander",
            "c) GetProperty",
            "d) LocalProperties",
            ""
        ],
        "Answer": "Answer: c"
    },
    {
        "id": 463,
        "Question": "___________ is a thread local class containing local properties.",
        "Options": [
            "a) ParseNextProperty",
            "b) PropertyExpander",
            "c) GetProperty",
            "d) LocalProperties",
            ""
        ],
        "Answer": "Answer: d"
    },
    {
        "id": 464,
        "Question": "___________ is the class to resolve properties in a map.",
        "Options": [
            "a) LocalPropertyStack",
            "b) ResolvePropertyMap",
            "c) NullReturn",
            "d) ParseProperties",
            ""
        ],
        "Answer": "Answer: b"
    },
    {
        "id": 465,
        "Question": "___________ parses properties using a collection of expanders.",
        "Options": [
            "a) LocalPropertyStack",
            "b) ResolvePropertyMap",
            "c) NullReturn",
            "d) ParseProperties",
            ""
        ],
        "Answer": "Answer: d"
    },
    {
        "id": 466,
        "Question": "_________ is a class to represent a null and to stop the chain of lookups.",
        "Options": [
            "a) LocalPropertyStack",
            "b) ResolvePropertyMap",
            "c) NullReturn",
            "d) ParseProperties",
            ""
        ],
        "Answer": "Answer: c"
    },
    {
        "id": 467,
        "Question": "________________ interface is used by ant attributes.",
        "Options": [
            "a) EnableAttribute",
            "b) PropertyExpander",
            "c) GetProperty",
            "d) LocalProperties",
            ""
        ],
        "Answer": "Answer: a"
    },
    {
        "id": 468,
        "Question": "_____________ class is used to indicate that the XML namespace (URI) can be used to look for namespace attributes.",
        "Options": [
            "a) AttributeNamespace",
            "b) BaseIfAttribute",
            "c) IfBlankAttribute",
            "d) IfSetAttribute",
            ""
        ],
        "Answer": "Answer: a"
    },
    {
        "id": 469,
        "Question": "____________ is an abstract class for if/unless attributes.",
        "Options": [
            "a) AttributeNamespace",
            "b) BaseIfAttribute",
            "c) IfBlankAttribute",
            "d) IfSetAttribute",
            ""
        ],
        "Answer": "Answer: b"
    },
    {
        "id": 470,
        "Question": "_____________ checks if an attribute is blank or not.",
        "Options": [
            "a) BaseIfAttribute",
            "b) IfBlankAttribute",
            "c) IfTrueAttribute",
            "d) IfSetAttribute",
            ""
        ],
        "Answer": "Answer: b"
    },
    {
        "id": 471,
        "Question": "______________ check if an attribute value is true or not.",
        "Options": [
            "a) BaseIfAttribute",
            "b) IfBlankAttribute",
            "c) IfTrueAttribute",
            "d) IfSetAttribute",
            ""
        ],
        "Answer": "Answer: c"
    },
    {
        "id": 472,
        "Question": "_____________ is an interface indicating that a reader may be chained to another one.",
        "Options": [
            "a) TokenFilter.Filter",
            "b) BaseFilterReader",
            "c) BaseParamFilterReader",
            "d) ChainableReader",
            ""
        ],
        "Answer": "Answer: d"
    },
    {
        "id": 473,
        "Question": "______________ is the base class for core filter readers.",
        "Options": [
            "a) TokenFilter.Filter",
            "b) BaseFilterReader",
            "c) BaseParamFilterReader",
            "d) ChainableReader",
            ""
        ],
        "Answer": "Answer: b"
    },
    {
        "id": 474,
        "Question": "______________ is a parameterized base class for core filter readers.",
        "Options": [
            "a) TokenFilter.Filter",
            "b) BaseFilterReader",
            "c) BaseParamFilterReader",
            "d) ChainableReader",
            ""
        ],
        "Answer": "Answer: c"
    },
    {
        "id": 475,
        "Question": "_______________ class is used for assembling the constants declared in a Java class in key1=value1(line separator)key2=value2 format.",
        "Options": [
            "a) ClassConstants",
            "b) BaseFilterReader",
            "c) BaseParamFilterReader",
            "d) ChainableReader",
            ""
        ],
        "Answer": "Answer: a"
    },
    {
        "id": 476,
        "Question": "______________ converts text to local OS formatting conventions along with repairing the text damaged by file transfer programs.",
        "Options": [
            "a) ClassConstants",
            "b) BaseFilterReader",
            "c) BaseParamFilterReader",
            "d) FixCrLfFilter",
            ""
        ],
        "Answer": "Answer: d"
    },
    {
        "id": 477,
        "Question": "________________ reads the first n lines of a stream.",
        "Options": [
            "a) ClassConstants",
            "b) HeadFilter",
            "c) BaseParamFilterReader",
            "d) FixCrLfFilter",
            ""
        ],
        "Answer": "Answer: b"
    },
    {
        "id": 478,
        "Question": "_______________ is a Sax2 based project reader.",
        "Options": [
            "a) AntXMLContext",
            "b) DefaultExecutor",
            "c) ProjectHelperImpl",
            "d) ProjectHelper2",
            ""
        ],
        "Answer": "Answer: d"
    },
    {
        "id": 479,
        "Question": "______________ is a “Single-check” Target executor implementation.",
        "Options": [
            "a) SingleCheckExecutor",
            "b) DefaultExecutor",
            "c) ProjectHelperImpl",
            "d) ProjectHelper2",
            ""
        ],
        "Answer": "Answer: a"
    }
]